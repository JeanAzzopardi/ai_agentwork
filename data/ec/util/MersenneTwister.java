<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  

  


  

  <head>
    <title>
      /randomization/trunk/src/ec/util/MersenneTwister.java –
      openCDMS – Trac
    </title>
        <link rel="search" href="/trac/search" />
        <link rel="help" href="/trac/wiki/TracGuide" />
        <link rel="alternate" href="/trac/browser/randomization/trunk/src/ec/util/MersenneTwister.java?format=txt" type="text/plain" title="Plain Text" /><link rel="alternate" href="/trac/export/11521/randomization/trunk/src/ec/util/MersenneTwister.java" type="text/x-java; charset=iso-8859-15" title="Original Format" />
        <link rel="up" href="/trac/browser/randomization/trunk/src/ec/util" title="Parent directory" />
        <link rel="start" href="/trac/wiki" />
        <link rel="stylesheet" href="/trac/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/trac/chrome/common/css/code.css" type="text/css" /><link rel="stylesheet" href="/trac/pygments/trac.css" type="text/css" /><link rel="stylesheet" href="/trac/chrome/common/css/browser.css" type="text/css" />
        <link rel="shortcut icon" href="http://www.opencdms.org/templates/favicon.ico" type="image/x-icon" />
        <link rel="icon" href="http://www.opencdms.org/templates/favicon.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/trac/search/opensearch" title="Search openCDMS" />
    <script type="text/javascript" src="/trac/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/trac/chrome/common/js/trac.js"></script><script type="text/javascript" src="/trac/chrome/common/js/search.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/trac/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $("#jumploc input").hide();
        $("#jumploc select").change(function () {
          this.parentNode.parentNode.submit();
        })
      });
    </script>
  </head>
  <body>
    <div id="banner">
      <div id="header">
        <a id="logo" href="http://www.opencdms.org"><img src="http://www.opencdms.org/images/opencdmslogo-print.png" alt="openCDMS" height="83" width="321" /></a>
      </div>
      <form id="search" action="/trac/search" method="get">
        <div>
          <label for="proj-search">Search:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Search" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/trac/login">Login</a></li><li><a href="/trac/prefs">Preferences</a></li><li><a href="/trac/wiki/TracGuide">Help/Guide</a></li><li class="last"><a href="/trac/about">About Trac</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first"><a href="/trac/wiki">Wiki</a></li><li><a href="/trac/timeline">Timeline</a></li><li><a href="/trac/roadmap">Roadmap</a></li><li class="active"><a href="/trac/browser">Browse Source</a></li><li><a href="/trac/report">View Tickets</a></li><li><a href="/trac/search">Search</a></li><li class="last"><a href="/trac/hours">Hours</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Context Navigation</h2>
          <ul>
            <li class="first "><a href="/trac/changeset/8445/randomization/trunk/src/ec/util/MersenneTwister.java">Last Change</a></li><li><a href="/trac/browser/randomization/trunk/src/ec/util/MersenneTwister.java?annotate=blame&amp;rev=8445" title="Annotate each line with the last changed revision (this can be time consuming...)">Annotate</a></li><li class="last"><a href="/trac/log/randomization/trunk/src/ec/util/MersenneTwister.java">Revision Log</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="browser">
      <h1>
    <a class="pathentry first" title="Go to root directory" href="/trac/browser">root</a><span class="pathentry sep">/</span><a class="pathentry" title="View randomization" href="/trac/browser/randomization">randomization</a><span class="pathentry sep">/</span><a class="pathentry" title="View trunk" href="/trac/browser/randomization/trunk">trunk</a><span class="pathentry sep">/</span><a class="pathentry" title="View src" href="/trac/browser/randomization/trunk/src">src</a><span class="pathentry sep">/</span><a class="pathentry" title="View ec" href="/trac/browser/randomization/trunk/src/ec">ec</a><span class="pathentry sep">/</span><a class="pathentry" title="View util" href="/trac/browser/randomization/trunk/src/ec/util">util</a><span class="pathentry sep">/</span><a class="pathentry" title="View MersenneTwister.java" href="/trac/browser/randomization/trunk/src/ec/util/MersenneTwister.java">MersenneTwister.java</a>
    <br style="clear: both" />
  </h1>
      <div id="jumprev">
        <form action="" method="get">
          <div>
            <label for="rev">
              View revision:</label>
            <input type="text" id="rev" name="rev" size="6" />
          </div>
        </form>
      </div>
      <table id="info" summary="Revision info">
        <tr>
          <th scope="col">
            Revision <a href="/trac/changeset/8445">8445</a>, <span title="26970 bytes">26.3 kB</span>
            (checked in by RobHarper, <a class="timeline" href="/trac/timeline?from=2008-04-09T17%3A25%3A55Z%2B0100&amp;precision=second" title="2008-04-09T17:25:55Z+0100 in Timeline">13 months</a> ago)
          </th>
        </tr>
        <tr>
          <td class="message searchable">
              <p>
Removed licence <br />
</p>
          </td>
        </tr>
      </table>
      <div id="preview" class="searchable">
    <table class="code"><thead><tr><th class="lineno" title="Line numbers">Line</th><th class="content"> </th></tr></thead><tbody><tr><th id="L1"><a href="javascript:setLineNum(1)">1</a></th><td><span class="k">package</span> ec<span class="o">.</span><span class="na">util</span><span class="o">;</span></td></tr><tr><th id="L2"><a href="javascript:setLineNum(2)">2</a></th><td></td></tr><tr><th id="L3"><a href="javascript:setLineNum(3)">3</a></th><td><span class="k">import</span> <span class="nn">java.io.*</span><span class="o">;</span></td></tr><tr><th id="L4"><a href="javascript:setLineNum(4)">4</a></th><td></td></tr><tr><th id="L5"><a href="javascript:setLineNum(5)">5</a></th><td><span class="c">/** </span></td></tr><tr><th id="L6"><a href="javascript:setLineNum(6)">6</a></th><td><span class="c"> * &lt;h3&gt;MersenneTwister and MersenneTwisterFast&lt;/h3&gt;</span></td></tr><tr><th id="L7"><a href="javascript:setLineNum(7)">7</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Version 13&lt;/b&gt;, based on version MT199937(99/10/29)</span></td></tr><tr><th id="L8"><a href="javascript:setLineNum(8)">8</a></th><td><span class="c"> * of the Mersenne Twister algorithm found at </span></td></tr><tr><th id="L9"><a href="javascript:setLineNum(9)">9</a></th><td><span class="c"> * &lt;a href="http://www.math.keio.ac.jp/matumoto/emt.html"&gt;</span></td></tr><tr><th id="L10"><a href="javascript:setLineNum(10)">10</a></th><td><span class="c"> * The Mersenne Twister Home Page&lt;/a&gt;, with the initialization</span></td></tr><tr><th id="L11"><a href="javascript:setLineNum(11)">11</a></th><td><span class="c"> * improved using the new 2002/1/26 initialization algorithm</span></td></tr><tr><th id="L12"><a href="javascript:setLineNum(12)">12</a></th><td><span class="c"> * By Sean Luke, October 2004.</span></td></tr><tr><th id="L13"><a href="javascript:setLineNum(13)">13</a></th><td><span class="c"> * </span></td></tr><tr><th id="L14"><a href="javascript:setLineNum(14)">14</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;MersenneTwister&lt;/b&gt; is a drop-in subclass replacement</span></td></tr><tr><th id="L15"><a href="javascript:setLineNum(15)">15</a></th><td><span class="c"> * for java.util.Random.  It is properly synchronized and</span></td></tr><tr><th id="L16"><a href="javascript:setLineNum(16)">16</a></th><td><span class="c"> * can be used in a multithreaded environment.  On modern VMs such</span></td></tr><tr><th id="L17"><a href="javascript:setLineNum(17)">17</a></th><td><span class="c"> * as HotSpot, it is approximately 1/3 slower than java.util.Random.</span></td></tr><tr><th id="L18"><a href="javascript:setLineNum(18)">18</a></th><td><span class="c"> *</span></td></tr><tr><th id="L19"><a href="javascript:setLineNum(19)">19</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;MersenneTwisterFast&lt;/b&gt; is not a subclass of java.util.Random.  It has</span></td></tr><tr><th id="L20"><a href="javascript:setLineNum(20)">20</a></th><td><span class="c"> * the same public methods as Random does, however, and it is</span></td></tr><tr><th id="L21"><a href="javascript:setLineNum(21)">21</a></th><td><span class="c"> * algorithmically identical to MersenneTwister.  MersenneTwisterFast</span></td></tr><tr><th id="L22"><a href="javascript:setLineNum(22)">22</a></th><td><span class="c"> * has hard-code inlined all of its methods directly, and made all of them</span></td></tr><tr><th id="L23"><a href="javascript:setLineNum(23)">23</a></th><td><span class="c"> * final (well, the ones of consequence anyway).  Further, these</span></td></tr><tr><th id="L24"><a href="javascript:setLineNum(24)">24</a></th><td><span class="c"> * methods are &lt;i&gt;not&lt;/i&gt; synchronized, so the same MersenneTwisterFast</span></td></tr><tr><th id="L25"><a href="javascript:setLineNum(25)">25</a></th><td><span class="c"> * instance cannot be shared by multiple threads.  But all this helps</span></td></tr><tr><th id="L26"><a href="javascript:setLineNum(26)">26</a></th><td><span class="c"> * MersenneTwisterFast achieve well over twice the speed of MersenneTwister.</span></td></tr><tr><th id="L27"><a href="javascript:setLineNum(27)">27</a></th><td><span class="c"> * java.util.Random is about 1/3 slower than MersenneTwisterFast.</span></td></tr><tr><th id="L28"><a href="javascript:setLineNum(28)">28</a></th><td><span class="c"> *</span></td></tr><tr><th id="L29"><a href="javascript:setLineNum(29)">29</a></th><td><span class="c"> * &lt;h3&gt;About the Mersenne Twister&lt;/h3&gt;</span></td></tr><tr><th id="L30"><a href="javascript:setLineNum(30)">30</a></th><td><span class="c"> * &lt;p&gt;This is a Java version of the C-program for MT19937: Integer version.</span></td></tr><tr><th id="L31"><a href="javascript:setLineNum(31)">31</a></th><td><span class="c"> * The MT19937 algorithm was created by Makoto Matsumoto and Takuji Nishimura,</span></td></tr><tr><th id="L32"><a href="javascript:setLineNum(32)">32</a></th><td><span class="c"> * who ask: "When you use this, send an email to: matumoto@math.keio.ac.jp</span></td></tr><tr><th id="L33"><a href="javascript:setLineNum(33)">33</a></th><td><span class="c"> * with an appropriate reference to your work".  Indicate that this</span></td></tr><tr><th id="L34"><a href="javascript:setLineNum(34)">34</a></th><td><span class="c"> * is a translation of their algorithm into Java.</span></td></tr><tr><th id="L35"><a href="javascript:setLineNum(35)">35</a></th><td><span class="c"> *</span></td></tr><tr><th id="L36"><a href="javascript:setLineNum(36)">36</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Reference. &lt;/b&gt;</span></td></tr><tr><th id="L37"><a href="javascript:setLineNum(37)">37</a></th><td><span class="c"> * Makato Matsumoto and Takuji Nishimura,</span></td></tr><tr><th id="L38"><a href="javascript:setLineNum(38)">38</a></th><td><span class="c"> * "Mersenne Twister: A 623-Dimensionally Equidistributed Uniform</span></td></tr><tr><th id="L39"><a href="javascript:setLineNum(39)">39</a></th><td><span class="c"> * Pseudo-Random Number Generator",</span></td></tr><tr><th id="L40"><a href="javascript:setLineNum(40)">40</a></th><td><span class="c"> * &lt;i&gt;ACM Transactions on Modeling and Computer Simulation,&lt;/i&gt;</span></td></tr><tr><th id="L41"><a href="javascript:setLineNum(41)">41</a></th><td><span class="c"> * Vol. 8, No. 1, January 1998, pp 3--30.</span></td></tr><tr><th id="L42"><a href="javascript:setLineNum(42)">42</a></th><td><span class="c"> *</span></td></tr><tr><th id="L43"><a href="javascript:setLineNum(43)">43</a></th><td><span class="c"> * &lt;h3&gt;About this Version&lt;/h3&gt;</span></td></tr><tr><th id="L44"><a href="javascript:setLineNum(44)">44</a></th><td><span class="c"> *</span></td></tr><tr><th id="L45"><a href="javascript:setLineNum(45)">45</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Changes Since V12:&lt;/b&gt; clone() method added.</span></td></tr><tr><th id="L46"><a href="javascript:setLineNum(46)">46</a></th><td><span class="c"> *</span></td></tr><tr><th id="L47"><a href="javascript:setLineNum(47)">47</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Changes Since V11:&lt;/b&gt; stateEquals(...) method added.  MersenneTwisterFast</span></td></tr><tr><th id="L48"><a href="javascript:setLineNum(48)">48</a></th><td><span class="c"> * is equal to other MersenneTwisterFasts with identical state; likewise</span></td></tr><tr><th id="L49"><a href="javascript:setLineNum(49)">49</a></th><td><span class="c"> * MersenneTwister is equal to other MersenneTwister with identical state.</span></td></tr><tr><th id="L50"><a href="javascript:setLineNum(50)">50</a></th><td><span class="c"> * This isn't equals(...) because that requires a contract of immutability</span></td></tr><tr><th id="L51"><a href="javascript:setLineNum(51)">51</a></th><td><span class="c"> * to compare by value.</span></td></tr><tr><th id="L52"><a href="javascript:setLineNum(52)">52</a></th><td><span class="c"> *</span></td></tr><tr><th id="L53"><a href="javascript:setLineNum(53)">53</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Changes Since V10:&lt;/b&gt; A documentation error suggested that</span></td></tr><tr><th id="L54"><a href="javascript:setLineNum(54)">54</a></th><td><span class="c"> * setSeed(int[]) required an int[] array 624 long.  In fact, the array</span></td></tr><tr><th id="L55"><a href="javascript:setLineNum(55)">55</a></th><td><span class="c"> * can be any non-zero length.  The new version also checks for this fact.</span></td></tr><tr><th id="L56"><a href="javascript:setLineNum(56)">56</a></th><td><span class="c"> *</span></td></tr><tr><th id="L57"><a href="javascript:setLineNum(57)">57</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Changes Since V9:&lt;/b&gt; readState(stream) and writeState(stream)</span></td></tr><tr><th id="L58"><a href="javascript:setLineNum(58)">58</a></th><td><span class="c"> * provided.</span></td></tr><tr><th id="L59"><a href="javascript:setLineNum(59)">59</a></th><td><span class="c"> *</span></td></tr><tr><th id="L60"><a href="javascript:setLineNum(60)">60</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Changes Since V8:&lt;/b&gt; setSeed(int) was only using the first 28 bits</span></td></tr><tr><th id="L61"><a href="javascript:setLineNum(61)">61</a></th><td><span class="c"> * of the seed; it should have been 32 bits.  For small-number seeds the</span></td></tr><tr><th id="L62"><a href="javascript:setLineNum(62)">62</a></th><td><span class="c"> * behavior is identical.</span></td></tr><tr><th id="L63"><a href="javascript:setLineNum(63)">63</a></th><td><span class="c"> *</span></td></tr><tr><th id="L64"><a href="javascript:setLineNum(64)">64</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Changes Since V7:&lt;/b&gt; A documentation error in MersenneTwisterFast</span></td></tr><tr><th id="L65"><a href="javascript:setLineNum(65)">65</a></th><td><span class="c"> * (but not MersenneTwister) stated that nextDouble selects uniformly from</span></td></tr><tr><th id="L66"><a href="javascript:setLineNum(66)">66</a></th><td><span class="c"> * the full-open interval [0,1].  It does not.  nextDouble's contract is</span></td></tr><tr><th id="L67"><a href="javascript:setLineNum(67)">67</a></th><td><span class="c"> * identical across MersenneTwisterFast, MersenneTwister, and java.util.Random,</span></td></tr><tr><th id="L68"><a href="javascript:setLineNum(68)">68</a></th><td><span class="c"> * namely, selection in the half-open interval [0,1).  That is, 1.0 should</span></td></tr><tr><th id="L69"><a href="javascript:setLineNum(69)">69</a></th><td><span class="c"> * not be returned.  A similar contract exists in nextFloat.</span></td></tr><tr><th id="L70"><a href="javascript:setLineNum(70)">70</a></th><td><span class="c"> *</span></td></tr><tr><th id="L71"><a href="javascript:setLineNum(71)">71</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Changes Since V6:&lt;/b&gt; License has changed from LGPL to BSD.</span></td></tr><tr><th id="L72"><a href="javascript:setLineNum(72)">72</a></th><td><span class="c"> * New timing information to compare against</span></td></tr><tr><th id="L73"><a href="javascript:setLineNum(73)">73</a></th><td><span class="c"> * java.util.Random.  Recent versions of HotSpot have helped Random increase</span></td></tr><tr><th id="L74"><a href="javascript:setLineNum(74)">74</a></th><td><span class="c"> * in speed to the point where it is faster than MersenneTwister but slower</span></td></tr><tr><th id="L75"><a href="javascript:setLineNum(75)">75</a></th><td><span class="c"> * than MersenneTwisterFast (which should be the case, as it's a less complex</span></td></tr><tr><th id="L76"><a href="javascript:setLineNum(76)">76</a></th><td><span class="c"> * algorithm but is synchronized).</span></td></tr><tr><th id="L77"><a href="javascript:setLineNum(77)">77</a></th><td><span class="c"> * </span></td></tr><tr><th id="L78"><a href="javascript:setLineNum(78)">78</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Changes Since V5:&lt;/b&gt; New empty constructor made to work the same</span></td></tr><tr><th id="L79"><a href="javascript:setLineNum(79)">79</a></th><td><span class="c"> * as java.util.Random -- namely, it seeds based on the current time in</span></td></tr><tr><th id="L80"><a href="javascript:setLineNum(80)">80</a></th><td><span class="c"> * milliseconds.</span></td></tr><tr><th id="L81"><a href="javascript:setLineNum(81)">81</a></th><td><span class="c"> *</span></td></tr><tr><th id="L82"><a href="javascript:setLineNum(82)">82</a></th><td><span class="c"> * &lt;p&gt;&lt;b&gt;Changes Since V4:&lt;/b&gt; New initialization algorithms.  See</span></td></tr><tr><th id="L83"><a href="javascript:setLineNum(83)">83</a></th><td><span class="c"> * (see &lt;a href="http://www.math.keio.ac.jp/matumoto/MT2002/emt19937ar.html"&lt;/a&gt;</span></td></tr><tr><th id="L84"><a href="javascript:setLineNum(84)">84</a></th><td><span class="c"> * http://www.math.keio.ac.jp/matumoto/MT2002/emt19937ar.html&lt;/a&gt;)</span></td></tr><tr><th id="L85"><a href="javascript:setLineNum(85)">85</a></th><td><span class="c"> *</span></td></tr><tr><th id="L86"><a href="javascript:setLineNum(86)">86</a></th><td><span class="c"> * &lt;p&gt;The MersenneTwister code is based on standard MT19937 C/C++ </span></td></tr><tr><th id="L87"><a href="javascript:setLineNum(87)">87</a></th><td><span class="c"> * code by Takuji Nishimura,</span></td></tr><tr><th id="L88"><a href="javascript:setLineNum(88)">88</a></th><td><span class="c"> * with suggestions from Topher Cooper and Marc Rieffel, July 1997.</span></td></tr><tr><th id="L89"><a href="javascript:setLineNum(89)">89</a></th><td><span class="c"> * The code was originally translated into Java by Michael Lecuyer,</span></td></tr><tr><th id="L90"><a href="javascript:setLineNum(90)">90</a></th><td><span class="c"> * January 1999, and the original code is Copyright (c) 1999 by Michael Lecuyer.</span></td></tr><tr><th id="L91"><a href="javascript:setLineNum(91)">91</a></th><td><span class="c"> *</span></td></tr><tr><th id="L92"><a href="javascript:setLineNum(92)">92</a></th><td><span class="c"> * &lt;h3&gt;Java notes&lt;/h3&gt;</span></td></tr><tr><th id="L93"><a href="javascript:setLineNum(93)">93</a></th><td><span class="c"> * </span></td></tr><tr><th id="L94"><a href="javascript:setLineNum(94)">94</a></th><td><span class="c"> * &lt;p&gt;This implementation implements the bug fixes made</span></td></tr><tr><th id="L95"><a href="javascript:setLineNum(95)">95</a></th><td><span class="c"> * in Java 1.2's version of Random, which means it can be used with</span></td></tr><tr><th id="L96"><a href="javascript:setLineNum(96)">96</a></th><td><span class="c"> * earlier versions of Java.  See </span></td></tr><tr><th id="L97"><a href="javascript:setLineNum(97)">97</a></th><td><span class="c"> * &lt;a href="http://www.javasoft.com/products/jdk/1.2/docs/api/java/util/Random.html"&gt;</span></td></tr><tr><th id="L98"><a href="javascript:setLineNum(98)">98</a></th><td><span class="c"> * the JDK 1.2 java.util.Random documentation&lt;/a&gt; for further documentation</span></td></tr><tr><th id="L99"><a href="javascript:setLineNum(99)">99</a></th><td><span class="c"> * on the random-number generation contracts made.  Additionally, there's</span></td></tr><tr><th id="L100"><a href="javascript:setLineNum(100)">100</a></th><td><span class="c"> * an undocumented bug in the JDK java.util.Random.nextBytes() method,</span></td></tr><tr><th id="L101"><a href="javascript:setLineNum(101)">101</a></th><td><span class="c"> * which this code fixes.</span></td></tr><tr><th id="L102"><a href="javascript:setLineNum(102)">102</a></th><td><span class="c"> *</span></td></tr><tr><th id="L103"><a href="javascript:setLineNum(103)">103</a></th><td><span class="c"> * &lt;p&gt; Just like java.util.Random, this</span></td></tr><tr><th id="L104"><a href="javascript:setLineNum(104)">104</a></th><td><span class="c"> * generator accepts a long seed but doesn't use all of it.  java.util.Random</span></td></tr><tr><th id="L105"><a href="javascript:setLineNum(105)">105</a></th><td><span class="c"> * uses 48 bits.  The Mersenne Twister instead uses 32 bits (int size).</span></td></tr><tr><th id="L106"><a href="javascript:setLineNum(106)">106</a></th><td><span class="c"> * So it's best if your seed does not exceed the int range.</span></td></tr><tr><th id="L107"><a href="javascript:setLineNum(107)">107</a></th><td><span class="c"> *</span></td></tr><tr><th id="L108"><a href="javascript:setLineNum(108)">108</a></th><td><span class="c"> * &lt;p&gt;MersenneTwister can be used reliably </span></td></tr><tr><th id="L109"><a href="javascript:setLineNum(109)">109</a></th><td><span class="c"> * on JDK version 1.1.5 or above.  Earlier Java versions have serious bugs in</span></td></tr><tr><th id="L110"><a href="javascript:setLineNum(110)">110</a></th><td><span class="c"> * java.util.Random; only MersenneTwisterFast (and not MersenneTwister nor</span></td></tr><tr><th id="L111"><a href="javascript:setLineNum(111)">111</a></th><td><span class="c"> * java.util.Random) should be used with them.</span></td></tr><tr><th id="L112"><a href="javascript:setLineNum(112)">112</a></th><td><span class="c"> *</span></td></tr><tr><th id="L113"><a href="javascript:setLineNum(113)">113</a></th><td><span class="c"> * &lt;h3&gt;License&lt;/h3&gt;</span></td></tr><tr><th id="L114"><a href="javascript:setLineNum(114)">114</a></th><td><span class="c"> *</span></td></tr><tr><th id="L115"><a href="javascript:setLineNum(115)">115</a></th><td><span class="c"> * Copyright (c) 2003 by Sean Luke. &lt;br&gt;</span></td></tr><tr><th id="L116"><a href="javascript:setLineNum(116)">116</a></th><td><span class="c"> * Portions copyright (c) 1993 by Michael Lecuyer. &lt;br&gt;</span></td></tr><tr><th id="L117"><a href="javascript:setLineNum(117)">117</a></th><td><span class="c"> * All rights reserved. &lt;br&gt;</span></td></tr><tr><th id="L118"><a href="javascript:setLineNum(118)">118</a></th><td><span class="c"> *</span></td></tr><tr><th id="L119"><a href="javascript:setLineNum(119)">119</a></th><td><span class="c"> * &lt;p&gt;Redistribution and use in source and binary forms, with or without </span></td></tr><tr><th id="L120"><a href="javascript:setLineNum(120)">120</a></th><td><span class="c"> * modification, are permitted provided that the following conditions are met:</span></td></tr><tr><th id="L121"><a href="javascript:setLineNum(121)">121</a></th><td><span class="c"> * &lt;ul&gt;</span></td></tr><tr><th id="L122"><a href="javascript:setLineNum(122)">122</a></th><td><span class="c"> * &lt;li&gt; Redistributions of source code must retain the above copyright notice, </span></td></tr><tr><th id="L123"><a href="javascript:setLineNum(123)">123</a></th><td><span class="c"> * this list of conditions and the following disclaimer.</span></td></tr><tr><th id="L124"><a href="javascript:setLineNum(124)">124</a></th><td><span class="c"> * &lt;li&gt; Redistributions in binary form must reproduce the above copyright notice, </span></td></tr><tr><th id="L125"><a href="javascript:setLineNum(125)">125</a></th><td><span class="c"> * this list of conditions and the following disclaimer in the documentation </span></td></tr><tr><th id="L126"><a href="javascript:setLineNum(126)">126</a></th><td><span class="c"> * and/or other materials provided with the distribution.</span></td></tr><tr><th id="L127"><a href="javascript:setLineNum(127)">127</a></th><td><span class="c"> * &lt;li&gt; Neither the name of the copyright owners, their employers, nor the </span></td></tr><tr><th id="L128"><a href="javascript:setLineNum(128)">128</a></th><td><span class="c"> * names of its contributors may be used to endorse or promote products </span></td></tr><tr><th id="L129"><a href="javascript:setLineNum(129)">129</a></th><td><span class="c"> * derived from this software without specific prior written permission.</span></td></tr><tr><th id="L130"><a href="javascript:setLineNum(130)">130</a></th><td><span class="c"> * &lt;/ul&gt;</span></td></tr><tr><th id="L131"><a href="javascript:setLineNum(131)">131</a></th><td><span class="c"> * &lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" </span></td></tr><tr><th id="L132"><a href="javascript:setLineNum(132)">132</a></th><td><span class="c"> * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE </span></td></tr><tr><th id="L133"><a href="javascript:setLineNum(133)">133</a></th><td><span class="c"> * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE </span></td></tr><tr><th id="L134"><a href="javascript:setLineNum(134)">134</a></th><td><span class="c"> * DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNERS OR CONTRIBUTORS BE </span></td></tr><tr><th id="L135"><a href="javascript:setLineNum(135)">135</a></th><td><span class="c"> * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR </span></td></tr><tr><th id="L136"><a href="javascript:setLineNum(136)">136</a></th><td><span class="c"> * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF </span></td></tr><tr><th id="L137"><a href="javascript:setLineNum(137)">137</a></th><td><span class="c"> * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS </span></td></tr><tr><th id="L138"><a href="javascript:setLineNum(138)">138</a></th><td><span class="c"> * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN </span></td></tr><tr><th id="L139"><a href="javascript:setLineNum(139)">139</a></th><td><span class="c"> * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) </span></td></tr><tr><th id="L140"><a href="javascript:setLineNum(140)">140</a></th><td><span class="c"> * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE </span></td></tr><tr><th id="L141"><a href="javascript:setLineNum(141)">141</a></th><td><span class="c"> * POSSIBILITY OF SUCH DAMAGE.</span></td></tr><tr><th id="L142"><a href="javascript:setLineNum(142)">142</a></th><td><span class="c"> *</span></td></tr><tr><th id="L143"><a href="javascript:setLineNum(143)">143</a></th><td><span class="c"> @version 13</span></td></tr><tr><th id="L144"><a href="javascript:setLineNum(144)">144</a></th><td><span class="c">*/</span></td></tr><tr><th id="L145"><a href="javascript:setLineNum(145)">145</a></th><td></td></tr><tr><th id="L146"><a href="javascript:setLineNum(146)">146</a></th><td><span class="k">public</span> <span class="k">class</span> <span class="nc">MersenneTwister</span> <span class="k">extends</span> java<span class="o">.</span><span class="na">util</span><span class="o">.</span><span class="na">Random</span> <span class="k">implements</span> Serializable<span class="o">,</span> Cloneable</td></tr><tr><th id="L147"><a href="javascript:setLineNum(147)">147</a></th><td>    <span class="o">{</span></td></tr><tr><th id="L148"><a href="javascript:setLineNum(148)">148</a></th><td>    <span class="c">// Period parameters</span></td></tr><tr><th id="L149"><a href="javascript:setLineNum(149)">149</a></th><td><span class="c"></span>    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> N <span class="o">=</span> <span class="mi">624</span><span class="o">;</span></td></tr><tr><th id="L150"><a href="javascript:setLineNum(150)">150</a></th><td>    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> M <span class="o">=</span> <span class="mi">397</span><span class="o">;</span></td></tr><tr><th id="L151"><a href="javascript:setLineNum(151)">151</a></th><td>    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> MATRIX_A <span class="o">=</span> <span class="mh">0x9908b0df</span><span class="o">;</span>   <span class="c">//    private static final * constant vector a</span></td></tr><tr><th id="L152"><a href="javascript:setLineNum(152)">152</a></th><td><span class="c"></span>    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> UPPER_MASK <span class="o">=</span> <span class="mh">0x80000000</span><span class="o">;</span> <span class="c">// most significant w-r bits</span></td></tr><tr><th id="L153"><a href="javascript:setLineNum(153)">153</a></th><td><span class="c"></span>    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> LOWER_MASK <span class="o">=</span> <span class="mh">0x7fffffff</span><span class="o">;</span> <span class="c">// least significant r bits</span></td></tr><tr><th id="L154"><a href="javascript:setLineNum(154)">154</a></th><td><span class="c"></span></td></tr><tr><th id="L155"><a href="javascript:setLineNum(155)">155</a></th><td>    <span class="c">// Tempering parameters</span></td></tr><tr><th id="L156"><a href="javascript:setLineNum(156)">156</a></th><td><span class="c"></span>    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> TEMPERING_MASK_B <span class="o">=</span> <span class="mh">0x9d2c5680</span><span class="o">;</span></td></tr><tr><th id="L157"><a href="javascript:setLineNum(157)">157</a></th><td>    <span class="k">private</span> <span class="k">static</span> <span class="k">final</span> <span class="kt">int</span> TEMPERING_MASK_C <span class="o">=</span> <span class="mh">0xefc60000</span><span class="o">;</span></td></tr><tr><th id="L158"><a href="javascript:setLineNum(158)">158</a></th><td>    </td></tr><tr><th id="L159"><a href="javascript:setLineNum(159)">159</a></th><td>    <span class="k">private</span> <span class="kt">int</span> mt<span class="o">[];</span> <span class="c">// the array for the state vector</span></td></tr><tr><th id="L160"><a href="javascript:setLineNum(160)">160</a></th><td><span class="c"></span>    <span class="k">private</span> <span class="kt">int</span> mti<span class="o">;</span> <span class="c">// mti==N+1 means mt[N] is not initialized</span></td></tr><tr><th id="L161"><a href="javascript:setLineNum(161)">161</a></th><td><span class="c"></span>    <span class="k">private</span> <span class="kt">int</span> mag01<span class="o">[];</span></td></tr><tr><th id="L162"><a href="javascript:setLineNum(162)">162</a></th><td>    </td></tr><tr><th id="L163"><a href="javascript:setLineNum(163)">163</a></th><td>    <span class="c">// a good initial seed (of int size, though stored in a long)</span></td></tr><tr><th id="L164"><a href="javascript:setLineNum(164)">164</a></th><td><span class="c"></span>    <span class="c">//private static final long GOOD_SEED = 4357;</span></td></tr><tr><th id="L165"><a href="javascript:setLineNum(165)">165</a></th><td><span class="c"></span></td></tr><tr><th id="L166"><a href="javascript:setLineNum(166)">166</a></th><td>    <span class="c">/* implemented here because there's a bug in Random's implementation</span></td></tr><tr><th id="L167"><a href="javascript:setLineNum(167)">167</a></th><td><span class="c">       of the Gaussian code (divide by zero, and log(0), ugh!), yet its</span></td></tr><tr><th id="L168"><a href="javascript:setLineNum(168)">168</a></th><td><span class="c">       gaussian variables are private so we can't access them here.  :-( */</span></td></tr><tr><th id="L169"><a href="javascript:setLineNum(169)">169</a></th><td></td></tr><tr><th id="L170"><a href="javascript:setLineNum(170)">170</a></th><td>    <span class="k">private</span> <span class="kt">double</span> __nextNextGaussian<span class="o">;</span></td></tr><tr><th id="L171"><a href="javascript:setLineNum(171)">171</a></th><td>    <span class="k">private</span> <span class="kt">boolean</span> __haveNextNextGaussian<span class="o">;</span></td></tr><tr><th id="L172"><a href="javascript:setLineNum(172)">172</a></th><td></td></tr><tr><th id="L173"><a href="javascript:setLineNum(173)">173</a></th><td>    <span class="c">/* We're overriding all internal data, to my knowledge, so this should be okay */</span></td></tr><tr><th id="L174"><a href="javascript:setLineNum(174)">174</a></th><td>    <span class="k">public</span> Object <span class="nf">clone</span><span class="o">()</span> <span class="k">throws</span> CloneNotSupportedException</td></tr><tr><th id="L175"><a href="javascript:setLineNum(175)">175</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L176"><a href="javascript:setLineNum(176)">176</a></th><td>        MersenneTwister f <span class="o">=</span> <span class="o">(</span>MersenneTwister<span class="o">)(</span><span class="k">super</span><span class="o">.</span><span class="na">clone</span><span class="o">());</span></td></tr><tr><th id="L177"><a href="javascript:setLineNum(177)">177</a></th><td>        f<span class="o">.</span><span class="na">mt</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">[])(</span>mt<span class="o">.</span><span class="na">clone</span><span class="o">());</span></td></tr><tr><th id="L178"><a href="javascript:setLineNum(178)">178</a></th><td>        f<span class="o">.</span><span class="na">mag01</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">[])(</span>mag01<span class="o">.</span><span class="na">clone</span><span class="o">());</span></td></tr><tr><th id="L179"><a href="javascript:setLineNum(179)">179</a></th><td>        <span class="k">return</span> f<span class="o">;</span></td></tr><tr><th id="L180"><a href="javascript:setLineNum(180)">180</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L181"><a href="javascript:setLineNum(181)">181</a></th><td></td></tr><tr><th id="L182"><a href="javascript:setLineNum(182)">182</a></th><td>    <span class="k">public</span> <span class="kt">boolean</span> <span class="nf">stateEquals</span><span class="o">(</span>Object o<span class="o">)</span></td></tr><tr><th id="L183"><a href="javascript:setLineNum(183)">183</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L184"><a href="javascript:setLineNum(184)">184</a></th><td>        <span class="k">if</span> <span class="o">(</span>o<span class="o">==</span><span class="k">this</span><span class="o">)</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span></td></tr><tr><th id="L185"><a href="javascript:setLineNum(185)">185</a></th><td>        <span class="k">if</span> <span class="o">(</span>o <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="o">!(</span>o <span class="k">instanceof</span> MersenneTwister<span class="o">))</span></td></tr><tr><th id="L186"><a href="javascript:setLineNum(186)">186</a></th><td>            <span class="k">return</span> <span class="kc">false</span><span class="o">;</span></td></tr><tr><th id="L187"><a href="javascript:setLineNum(187)">187</a></th><td>        MersenneTwister other <span class="o">=</span> <span class="o">(</span>MersenneTwister<span class="o">)</span> o<span class="o">;</span></td></tr><tr><th id="L188"><a href="javascript:setLineNum(188)">188</a></th><td>        <span class="k">if</span> <span class="o">(</span>mti <span class="o">!=</span> other<span class="o">.</span><span class="na">mti</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span></td></tr><tr><th id="L189"><a href="javascript:setLineNum(189)">189</a></th><td>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> x<span class="o">=</span><span class="mi">0</span><span class="o">;</span>x<span class="o">&lt;</span>mag01<span class="o">.</span><span class="na">length</span><span class="o">;</span>x<span class="o">++)</span></td></tr><tr><th id="L190"><a href="javascript:setLineNum(190)">190</a></th><td>            <span class="k">if</span> <span class="o">(</span>mag01<span class="o">[</span>x<span class="o">]</span> <span class="o">!=</span> other<span class="o">.</span><span class="na">mag01</span><span class="o">[</span>x<span class="o">])</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span></td></tr><tr><th id="L191"><a href="javascript:setLineNum(191)">191</a></th><td>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> x<span class="o">=</span><span class="mi">0</span><span class="o">;</span>x<span class="o">&lt;</span>mt<span class="o">.</span><span class="na">length</span><span class="o">;</span>x<span class="o">++)</span></td></tr><tr><th id="L192"><a href="javascript:setLineNum(192)">192</a></th><td>            <span class="k">if</span> <span class="o">(</span>mt<span class="o">[</span>x<span class="o">]</span> <span class="o">!=</span> other<span class="o">.</span><span class="na">mt</span><span class="o">[</span>x<span class="o">])</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span></td></tr><tr><th id="L193"><a href="javascript:setLineNum(193)">193</a></th><td>        <span class="k">return</span> <span class="kc">true</span><span class="o">;</span></td></tr><tr><th id="L194"><a href="javascript:setLineNum(194)">194</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L195"><a href="javascript:setLineNum(195)">195</a></th><td></td></tr><tr><th id="L196"><a href="javascript:setLineNum(196)">196</a></th><td>    <span class="c">/** Reads the entire state of the MersenneTwister RNG from the stream */</span></td></tr><tr><th id="L197"><a href="javascript:setLineNum(197)">197</a></th><td>    <span class="k">public</span> <span class="kt">void</span> <span class="nf">readState</span><span class="o">(</span>DataInputStream stream<span class="o">)</span> <span class="k">throws</span> IOException</td></tr><tr><th id="L198"><a href="javascript:setLineNum(198)">198</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L199"><a href="javascript:setLineNum(199)">199</a></th><td>        <span class="kt">int</span> len <span class="o">=</span> mt<span class="o">.</span><span class="na">length</span><span class="o">;</span></td></tr><tr><th id="L200"><a href="javascript:setLineNum(200)">200</a></th><td>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> x<span class="o">=</span><span class="mi">0</span><span class="o">;</span>x<span class="o">&lt;</span>len<span class="o">;</span>x<span class="o">++)</span> mt<span class="o">[</span>x<span class="o">]</span> <span class="o">=</span> stream<span class="o">.</span><span class="na">readInt</span><span class="o">();</span></td></tr><tr><th id="L201"><a href="javascript:setLineNum(201)">201</a></th><td>        </td></tr><tr><th id="L202"><a href="javascript:setLineNum(202)">202</a></th><td>        len <span class="o">=</span> mag01<span class="o">.</span><span class="na">length</span><span class="o">;</span></td></tr><tr><th id="L203"><a href="javascript:setLineNum(203)">203</a></th><td>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> x<span class="o">=</span><span class="mi">0</span><span class="o">;</span>x<span class="o">&lt;</span>len<span class="o">;</span>x<span class="o">++)</span> mag01<span class="o">[</span>x<span class="o">]</span> <span class="o">=</span> stream<span class="o">.</span><span class="na">readInt</span><span class="o">();</span></td></tr><tr><th id="L204"><a href="javascript:setLineNum(204)">204</a></th><td>        </td></tr><tr><th id="L205"><a href="javascript:setLineNum(205)">205</a></th><td>        mti <span class="o">=</span> stream<span class="o">.</span><span class="na">readInt</span><span class="o">();</span></td></tr><tr><th id="L206"><a href="javascript:setLineNum(206)">206</a></th><td>        __nextNextGaussian <span class="o">=</span> stream<span class="o">.</span><span class="na">readDouble</span><span class="o">();</span></td></tr><tr><th id="L207"><a href="javascript:setLineNum(207)">207</a></th><td>        __haveNextNextGaussian <span class="o">=</span> stream<span class="o">.</span><span class="na">readBoolean</span><span class="o">();</span></td></tr><tr><th id="L208"><a href="javascript:setLineNum(208)">208</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L209"><a href="javascript:setLineNum(209)">209</a></th><td>        </td></tr><tr><th id="L210"><a href="javascript:setLineNum(210)">210</a></th><td>    <span class="c">/** Writes the entire state of the MersenneTwister RNG to the stream */</span></td></tr><tr><th id="L211"><a href="javascript:setLineNum(211)">211</a></th><td>    <span class="k">public</span> <span class="kt">void</span> <span class="nf">writeState</span><span class="o">(</span>DataOutputStream stream<span class="o">)</span> <span class="k">throws</span> IOException</td></tr><tr><th id="L212"><a href="javascript:setLineNum(212)">212</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L213"><a href="javascript:setLineNum(213)">213</a></th><td>        <span class="kt">int</span> len <span class="o">=</span> mt<span class="o">.</span><span class="na">length</span><span class="o">;</span></td></tr><tr><th id="L214"><a href="javascript:setLineNum(214)">214</a></th><td>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> x<span class="o">=</span><span class="mi">0</span><span class="o">;</span>x<span class="o">&lt;</span>len<span class="o">;</span>x<span class="o">++)</span> stream<span class="o">.</span><span class="na">writeInt</span><span class="o">(</span>mt<span class="o">[</span>x<span class="o">]);</span></td></tr><tr><th id="L215"><a href="javascript:setLineNum(215)">215</a></th><td>        </td></tr><tr><th id="L216"><a href="javascript:setLineNum(216)">216</a></th><td>        len <span class="o">=</span> mag01<span class="o">.</span><span class="na">length</span><span class="o">;</span></td></tr><tr><th id="L217"><a href="javascript:setLineNum(217)">217</a></th><td>        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> x<span class="o">=</span><span class="mi">0</span><span class="o">;</span>x<span class="o">&lt;</span>len<span class="o">;</span>x<span class="o">++)</span> stream<span class="o">.</span><span class="na">writeInt</span><span class="o">(</span>mag01<span class="o">[</span>x<span class="o">]);</span></td></tr><tr><th id="L218"><a href="javascript:setLineNum(218)">218</a></th><td>        </td></tr><tr><th id="L219"><a href="javascript:setLineNum(219)">219</a></th><td>        stream<span class="o">.</span><span class="na">writeInt</span><span class="o">(</span>mti<span class="o">);</span></td></tr><tr><th id="L220"><a href="javascript:setLineNum(220)">220</a></th><td>        stream<span class="o">.</span><span class="na">writeDouble</span><span class="o">(</span>__nextNextGaussian<span class="o">);</span></td></tr><tr><th id="L221"><a href="javascript:setLineNum(221)">221</a></th><td>        stream<span class="o">.</span><span class="na">writeBoolean</span><span class="o">(</span>__haveNextNextGaussian<span class="o">);</span></td></tr><tr><th id="L222"><a href="javascript:setLineNum(222)">222</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L223"><a href="javascript:setLineNum(223)">223</a></th><td></td></tr><tr><th id="L224"><a href="javascript:setLineNum(224)">224</a></th><td></td></tr><tr><th id="L225"><a href="javascript:setLineNum(225)">225</a></th><td>    <span class="c">/**</span></td></tr><tr><th id="L226"><a href="javascript:setLineNum(226)">226</a></th><td><span class="c">     * Constructor using the default seed.</span></td></tr><tr><th id="L227"><a href="javascript:setLineNum(227)">227</a></th><td><span class="c">     */</span></td></tr><tr><th id="L228"><a href="javascript:setLineNum(228)">228</a></th><td>    <span class="k">public</span> <span class="nf">MersenneTwister</span><span class="o">()</span></td></tr><tr><th id="L229"><a href="javascript:setLineNum(229)">229</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L230"><a href="javascript:setLineNum(230)">230</a></th><td>        <span class="k">this</span><span class="o">(</span>System<span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">());</span></td></tr><tr><th id="L231"><a href="javascript:setLineNum(231)">231</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L232"><a href="javascript:setLineNum(232)">232</a></th><td>    </td></tr><tr><th id="L233"><a href="javascript:setLineNum(233)">233</a></th><td>    <span class="c">/**</span></td></tr><tr><th id="L234"><a href="javascript:setLineNum(234)">234</a></th><td><span class="c">     * Constructor using a given seed.  Though you pass this seed in</span></td></tr><tr><th id="L235"><a href="javascript:setLineNum(235)">235</a></th><td><span class="c">     * as a long, it's best to make sure it's actually an integer.</span></td></tr><tr><th id="L236"><a href="javascript:setLineNum(236)">236</a></th><td><span class="c">     */</span></td></tr><tr><th id="L237"><a href="javascript:setLineNum(237)">237</a></th><td>    <span class="k">public</span> <span class="nf">MersenneTwister</span><span class="o">(</span><span class="k">final</span> <span class="kt">long</span> seed<span class="o">)</span></td></tr><tr><th id="L238"><a href="javascript:setLineNum(238)">238</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L239"><a href="javascript:setLineNum(239)">239</a></th><td>        <span class="k">super</span><span class="o">(</span>seed<span class="o">);</span>    <span class="c">/* just in case */</span></td></tr><tr><th id="L240"><a href="javascript:setLineNum(240)">240</a></th><td>        setSeed<span class="o">(</span>seed<span class="o">);</span></td></tr><tr><th id="L241"><a href="javascript:setLineNum(241)">241</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L242"><a href="javascript:setLineNum(242)">242</a></th><td>    </td></tr><tr><th id="L243"><a href="javascript:setLineNum(243)">243</a></th><td>    <span class="c">/**</span></td></tr><tr><th id="L244"><a href="javascript:setLineNum(244)">244</a></th><td><span class="c">     * Constructor using an array of integers as seed.</span></td></tr><tr><th id="L245"><a href="javascript:setLineNum(245)">245</a></th><td><span class="c">     * Your array must have a non-zero length.  Only the first 624 integers</span></td></tr><tr><th id="L246"><a href="javascript:setLineNum(246)">246</a></th><td><span class="c">     * in the array are used; if the array is shorter than this then</span></td></tr><tr><th id="L247"><a href="javascript:setLineNum(247)">247</a></th><td><span class="c">     * integers are repeatedly used in a wrap-around fashion.</span></td></tr><tr><th id="L248"><a href="javascript:setLineNum(248)">248</a></th><td><span class="c">     */</span></td></tr><tr><th id="L249"><a href="javascript:setLineNum(249)">249</a></th><td>    <span class="k">public</span> <span class="nf">MersenneTwister</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span><span class="o">[]</span> array<span class="o">)</span></td></tr><tr><th id="L250"><a href="javascript:setLineNum(250)">250</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L251"><a href="javascript:setLineNum(251)">251</a></th><td>        <span class="k">super</span><span class="o">(</span>System<span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">());</span>    <span class="c">/* pick something at random just in case */</span></td></tr><tr><th id="L252"><a href="javascript:setLineNum(252)">252</a></th><td>        setSeed<span class="o">(</span>array<span class="o">);</span></td></tr><tr><th id="L253"><a href="javascript:setLineNum(253)">253</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L254"><a href="javascript:setLineNum(254)">254</a></th><td></td></tr><tr><th id="L255"><a href="javascript:setLineNum(255)">255</a></th><td>    <span class="c">/**</span></td></tr><tr><th id="L256"><a href="javascript:setLineNum(256)">256</a></th><td><span class="c">     * Initalize the pseudo random number generator.  Don't</span></td></tr><tr><th id="L257"><a href="javascript:setLineNum(257)">257</a></th><td><span class="c">     * pass in a long that's bigger than an int (Mersenne Twister</span></td></tr><tr><th id="L258"><a href="javascript:setLineNum(258)">258</a></th><td><span class="c">     * only uses the first 32 bits for its seed).   </span></td></tr><tr><th id="L259"><a href="javascript:setLineNum(259)">259</a></th><td><span class="c">     */</span></td></tr><tr><th id="L260"><a href="javascript:setLineNum(260)">260</a></th><td></td></tr><tr><th id="L261"><a href="javascript:setLineNum(261)">261</a></th><td>    <span class="k">synchronized</span> <span class="k">public</span> <span class="kt">void</span> <span class="nf">setSeed</span><span class="o">(</span><span class="k">final</span> <span class="kt">long</span> seed<span class="o">)</span></td></tr><tr><th id="L262"><a href="javascript:setLineNum(262)">262</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L263"><a href="javascript:setLineNum(263)">263</a></th><td>        <span class="c">// it's always good style to call super</span></td></tr><tr><th id="L264"><a href="javascript:setLineNum(264)">264</a></th><td><span class="c"></span>        <span class="k">super</span><span class="o">.</span><span class="na">setSeed</span><span class="o">(</span>seed<span class="o">);</span></td></tr><tr><th id="L265"><a href="javascript:setLineNum(265)">265</a></th><td></td></tr><tr><th id="L266"><a href="javascript:setLineNum(266)">266</a></th><td>        <span class="c">// Due to a bug in java.util.Random clear up to 1.2, we're</span></td></tr><tr><th id="L267"><a href="javascript:setLineNum(267)">267</a></th><td><span class="c"></span>        <span class="c">// doing our own Gaussian variable.</span></td></tr><tr><th id="L268"><a href="javascript:setLineNum(268)">268</a></th><td><span class="c"></span>        __haveNextNextGaussian <span class="o">=</span> <span class="kc">false</span><span class="o">;</span></td></tr><tr><th id="L269"><a href="javascript:setLineNum(269)">269</a></th><td></td></tr><tr><th id="L270"><a href="javascript:setLineNum(270)">270</a></th><td>        mt <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span>N<span class="o">];</span></td></tr><tr><th id="L271"><a href="javascript:setLineNum(271)">271</a></th><td>        </td></tr><tr><th id="L272"><a href="javascript:setLineNum(272)">272</a></th><td>        mag01 <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="mi">2</span><span class="o">];</span></td></tr><tr><th id="L273"><a href="javascript:setLineNum(273)">273</a></th><td>        mag01<span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mh">0x0</span><span class="o">;</span></td></tr><tr><th id="L274"><a href="javascript:setLineNum(274)">274</a></th><td>        mag01<span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> MATRIX_A<span class="o">;</span></td></tr><tr><th id="L275"><a href="javascript:setLineNum(275)">275</a></th><td></td></tr><tr><th id="L276"><a href="javascript:setLineNum(276)">276</a></th><td>        mt<span class="o">[</span><span class="mi">0</span><span class="o">]=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)(</span>seed <span class="o">&amp;</span> <span class="mh">0xffffffff</span><span class="o">);</span></td></tr><tr><th id="L277"><a href="javascript:setLineNum(277)">277</a></th><td>        <span class="k">for</span> <span class="o">(</span>mti<span class="o">=</span><span class="mi">1</span><span class="o">;</span> mti<span class="o">&lt;</span>N<span class="o">;</span> mti<span class="o">++)</span> </td></tr><tr><th id="L278"><a href="javascript:setLineNum(278)">278</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L279"><a href="javascript:setLineNum(279)">279</a></th><td>            mt<span class="o">[</span>mti<span class="o">]</span> <span class="o">=</span> </td></tr><tr><th id="L280"><a href="javascript:setLineNum(280)">280</a></th><td>                <span class="o">(</span><span class="mi">1812433253</span> <span class="o">*</span> <span class="o">(</span>mt<span class="o">[</span>mti<span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">^</span> <span class="o">(</span>mt<span class="o">[</span>mti<span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">&gt;&gt;&gt;</span> <span class="mi">30</span><span class="o">))</span> <span class="o">+</span> mti<span class="o">);</span> </td></tr><tr><th id="L281"><a href="javascript:setLineNum(281)">281</a></th><td>            <span class="c">/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */</span></td></tr><tr><th id="L282"><a href="javascript:setLineNum(282)">282</a></th><td>            <span class="c">/* In the previous versions, MSBs of the seed affect   */</span></td></tr><tr><th id="L283"><a href="javascript:setLineNum(283)">283</a></th><td>            <span class="c">/* only MSBs of the array mt[].                        */</span></td></tr><tr><th id="L284"><a href="javascript:setLineNum(284)">284</a></th><td>            <span class="c">/* 2002/01/09 modified by Makoto Matsumoto             */</span></td></tr><tr><th id="L285"><a href="javascript:setLineNum(285)">285</a></th><td>            mt<span class="o">[</span>mti<span class="o">]</span> <span class="o">&amp;=</span> <span class="mh">0xffffffff</span><span class="o">;</span></td></tr><tr><th id="L286"><a href="javascript:setLineNum(286)">286</a></th><td>            <span class="c">/* for &gt;32 bit machines */</span></td></tr><tr><th id="L287"><a href="javascript:setLineNum(287)">287</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L288"><a href="javascript:setLineNum(288)">288</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L289"><a href="javascript:setLineNum(289)">289</a></th><td></td></tr><tr><th id="L290"><a href="javascript:setLineNum(290)">290</a></th><td></td></tr><tr><th id="L291"><a href="javascript:setLineNum(291)">291</a></th><td>    <span class="c">/**</span></td></tr><tr><th id="L292"><a href="javascript:setLineNum(292)">292</a></th><td><span class="c">     * Sets the seed of the MersenneTwister using an array of integers.</span></td></tr><tr><th id="L293"><a href="javascript:setLineNum(293)">293</a></th><td><span class="c">     * Your array must have a non-zero length.  Only the first 624 integers</span></td></tr><tr><th id="L294"><a href="javascript:setLineNum(294)">294</a></th><td><span class="c">     * in the array are used; if the array is shorter than this then</span></td></tr><tr><th id="L295"><a href="javascript:setLineNum(295)">295</a></th><td><span class="c">     * integers are repeatedly used in a wrap-around fashion.</span></td></tr><tr><th id="L296"><a href="javascript:setLineNum(296)">296</a></th><td><span class="c">     */</span></td></tr><tr><th id="L297"><a href="javascript:setLineNum(297)">297</a></th><td></td></tr><tr><th id="L298"><a href="javascript:setLineNum(298)">298</a></th><td>    <span class="k">synchronized</span> <span class="k">public</span> <span class="kt">void</span> <span class="nf">setSeed</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span><span class="o">[]</span> array<span class="o">)</span></td></tr><tr><th id="L299"><a href="javascript:setLineNum(299)">299</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L300"><a href="javascript:setLineNum(300)">300</a></th><td>        <span class="k">if</span> <span class="o">(</span>array<span class="o">.</span><span class="na">length</span> <span class="o">==</span> <span class="mi">0</span><span class="o">)</span></td></tr><tr><th id="L301"><a href="javascript:setLineNum(301)">301</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">"Array length must be greater than zero"</span><span class="o">);</span></td></tr><tr><th id="L302"><a href="javascript:setLineNum(302)">302</a></th><td>        <span class="kt">int</span> i<span class="o">,</span> j<span class="o">,</span> k<span class="o">;</span></td></tr><tr><th id="L303"><a href="javascript:setLineNum(303)">303</a></th><td>        setSeed<span class="o">(</span><span class="mi">19650218</span><span class="o">);</span></td></tr><tr><th id="L304"><a href="javascript:setLineNum(304)">304</a></th><td>        i<span class="o">=</span><span class="mi">1</span><span class="o">;</span> j<span class="o">=</span><span class="mi">0</span><span class="o">;</span></td></tr><tr><th id="L305"><a href="javascript:setLineNum(305)">305</a></th><td>        k <span class="o">=</span> <span class="o">(</span>N<span class="o">&gt;</span>array<span class="o">.</span><span class="na">length</span> <span class="o">?</span> N <span class="o">:</span> array<span class="o">.</span><span class="na">length</span><span class="o">);</span></td></tr><tr><th id="L306"><a href="javascript:setLineNum(306)">306</a></th><td>        <span class="k">for</span> <span class="o">(;</span> k<span class="o">!=</span><span class="mi">0</span><span class="o">;</span> k<span class="o">--)</span> </td></tr><tr><th id="L307"><a href="javascript:setLineNum(307)">307</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L308"><a href="javascript:setLineNum(308)">308</a></th><td>            mt<span class="o">[</span>i<span class="o">]</span> <span class="o">=</span> <span class="o">(</span>mt<span class="o">[</span>i<span class="o">]</span> <span class="o">^</span> <span class="o">((</span>mt<span class="o">[</span>i<span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">^</span> <span class="o">(</span>mt<span class="o">[</span>i<span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">&gt;&gt;&gt;</span> <span class="mi">30</span><span class="o">))</span> <span class="o">*</span> <span class="mi">1664525</span><span class="o">))</span> <span class="o">+</span> array<span class="o">[</span>j<span class="o">]</span> <span class="o">+</span> j<span class="o">;</span> <span class="c">/* non linear */</span></td></tr><tr><th id="L309"><a href="javascript:setLineNum(309)">309</a></th><td>            mt<span class="o">[</span>i<span class="o">]</span> <span class="o">&amp;=</span> <span class="mh">0xffffffff</span><span class="o">;</span> <span class="c">/* for WORDSIZE &gt; 32 machines */</span></td></tr><tr><th id="L310"><a href="javascript:setLineNum(310)">310</a></th><td>            i<span class="o">++;</span></td></tr><tr><th id="L311"><a href="javascript:setLineNum(311)">311</a></th><td>            j<span class="o">++;</span></td></tr><tr><th id="L312"><a href="javascript:setLineNum(312)">312</a></th><td>            <span class="k">if</span> <span class="o">(</span>i<span class="o">&gt;=</span>N<span class="o">)</span> <span class="o">{</span> mt<span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> mt<span class="o">[</span>N<span class="o">-</span><span class="mi">1</span><span class="o">];</span> i<span class="o">=</span><span class="mi">1</span><span class="o">;</span> <span class="o">}</span></td></tr><tr><th id="L313"><a href="javascript:setLineNum(313)">313</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">&gt;=</span>array<span class="o">.</span><span class="na">length</span><span class="o">)</span> j<span class="o">=</span><span class="mi">0</span><span class="o">;</span></td></tr><tr><th id="L314"><a href="javascript:setLineNum(314)">314</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L315"><a href="javascript:setLineNum(315)">315</a></th><td>        <span class="k">for</span> <span class="o">(</span>k<span class="o">=</span>N<span class="o">-</span><span class="mi">1</span><span class="o">;</span> k<span class="o">!=</span><span class="mi">0</span><span class="o">;</span> k<span class="o">--)</span> </td></tr><tr><th id="L316"><a href="javascript:setLineNum(316)">316</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L317"><a href="javascript:setLineNum(317)">317</a></th><td>            mt<span class="o">[</span>i<span class="o">]</span> <span class="o">=</span> <span class="o">(</span>mt<span class="o">[</span>i<span class="o">]</span> <span class="o">^</span> <span class="o">((</span>mt<span class="o">[</span>i<span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">^</span> <span class="o">(</span>mt<span class="o">[</span>i<span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">&gt;&gt;&gt;</span> <span class="mi">30</span><span class="o">))</span> <span class="o">*</span> <span class="mi">1566083941</span><span class="o">))</span> <span class="o">-</span> i<span class="o">;</span> <span class="c">/* non linear */</span></td></tr><tr><th id="L318"><a href="javascript:setLineNum(318)">318</a></th><td>            mt<span class="o">[</span>i<span class="o">]</span> <span class="o">&amp;=</span> <span class="mh">0xffffffff</span><span class="o">;</span> <span class="c">/* for WORDSIZE &gt; 32 machines */</span></td></tr><tr><th id="L319"><a href="javascript:setLineNum(319)">319</a></th><td>            i<span class="o">++;</span></td></tr><tr><th id="L320"><a href="javascript:setLineNum(320)">320</a></th><td>            <span class="k">if</span> <span class="o">(</span>i<span class="o">&gt;=</span>N<span class="o">)</span> </td></tr><tr><th id="L321"><a href="javascript:setLineNum(321)">321</a></th><td>                <span class="o">{</span></td></tr><tr><th id="L322"><a href="javascript:setLineNum(322)">322</a></th><td>                mt<span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> mt<span class="o">[</span>N<span class="o">-</span><span class="mi">1</span><span class="o">];</span> i<span class="o">=</span><span class="mi">1</span><span class="o">;</span> </td></tr><tr><th id="L323"><a href="javascript:setLineNum(323)">323</a></th><td>                <span class="o">}</span></td></tr><tr><th id="L324"><a href="javascript:setLineNum(324)">324</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L325"><a href="javascript:setLineNum(325)">325</a></th><td>        mt<span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mh">0x80000000</span><span class="o">;</span> <span class="c">/* MSB is 1; assuring non-zero initial array */</span> </td></tr><tr><th id="L326"><a href="javascript:setLineNum(326)">326</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L327"><a href="javascript:setLineNum(327)">327</a></th><td></td></tr><tr><th id="L328"><a href="javascript:setLineNum(328)">328</a></th><td></td></tr><tr><th id="L329"><a href="javascript:setLineNum(329)">329</a></th><td></td></tr><tr><th id="L330"><a href="javascript:setLineNum(330)">330</a></th><td>    <span class="c">/**</span></td></tr><tr><th id="L331"><a href="javascript:setLineNum(331)">331</a></th><td><span class="c">     * Returns an integer with &lt;i&gt;bits&lt;/i&gt; bits filled with a random number.</span></td></tr><tr><th id="L332"><a href="javascript:setLineNum(332)">332</a></th><td><span class="c">     */</span></td></tr><tr><th id="L333"><a href="javascript:setLineNum(333)">333</a></th><td>    <span class="k">synchronized</span> <span class="k">protected</span> <span class="kt">int</span> <span class="nf">next</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> bits<span class="o">)</span></td></tr><tr><th id="L334"><a href="javascript:setLineNum(334)">334</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L335"><a href="javascript:setLineNum(335)">335</a></th><td>        <span class="kt">int</span> y<span class="o">;</span></td></tr><tr><th id="L336"><a href="javascript:setLineNum(336)">336</a></th><td>        </td></tr><tr><th id="L337"><a href="javascript:setLineNum(337)">337</a></th><td>        <span class="k">if</span> <span class="o">(</span>mti <span class="o">&gt;=</span> N<span class="o">)</span>   <span class="c">// generate N words at one time</span></td></tr><tr><th id="L338"><a href="javascript:setLineNum(338)">338</a></th><td><span class="c"></span>            <span class="o">{</span></td></tr><tr><th id="L339"><a href="javascript:setLineNum(339)">339</a></th><td>            <span class="kt">int</span> kk<span class="o">;</span></td></tr><tr><th id="L340"><a href="javascript:setLineNum(340)">340</a></th><td>            <span class="k">final</span> <span class="kt">int</span><span class="o">[]</span> mt <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">mt</span><span class="o">;</span> <span class="c">// locals are slightly faster </span></td></tr><tr><th id="L341"><a href="javascript:setLineNum(341)">341</a></th><td><span class="c"></span>            <span class="k">final</span> <span class="kt">int</span><span class="o">[]</span> mag01 <span class="o">=</span> <span class="k">this</span><span class="o">.</span><span class="na">mag01</span><span class="o">;</span> <span class="c">// locals are slightly faster </span></td></tr><tr><th id="L342"><a href="javascript:setLineNum(342)">342</a></th><td><span class="c"></span>            </td></tr><tr><th id="L343"><a href="javascript:setLineNum(343)">343</a></th><td>            <span class="k">for</span> <span class="o">(</span>kk <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> kk <span class="o">&lt;</span> N <span class="o">-</span> M<span class="o">;</span> kk<span class="o">++)</span></td></tr><tr><th id="L344"><a href="javascript:setLineNum(344)">344</a></th><td>                <span class="o">{</span></td></tr><tr><th id="L345"><a href="javascript:setLineNum(345)">345</a></th><td>                y <span class="o">=</span> <span class="o">(</span>mt<span class="o">[</span>kk<span class="o">]</span> <span class="o">&amp;</span> UPPER_MASK<span class="o">)</span> <span class="o">|</span> <span class="o">(</span>mt<span class="o">[</span>kk<span class="o">+</span><span class="mi">1</span><span class="o">]</span> <span class="o">&amp;</span> LOWER_MASK<span class="o">);</span></td></tr><tr><th id="L346"><a href="javascript:setLineNum(346)">346</a></th><td>                mt<span class="o">[</span>kk<span class="o">]</span> <span class="o">=</span> mt<span class="o">[</span>kk<span class="o">+</span>M<span class="o">]</span> <span class="o">^</span> <span class="o">(</span>y <span class="o">&gt;&gt;&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">^</span> mag01<span class="o">[</span>y <span class="o">&amp;</span> <span class="mh">0x1</span><span class="o">];</span></td></tr><tr><th id="L347"><a href="javascript:setLineNum(347)">347</a></th><td>                <span class="o">}</span></td></tr><tr><th id="L348"><a href="javascript:setLineNum(348)">348</a></th><td>            <span class="k">for</span> <span class="o">(;</span> kk <span class="o">&lt;</span> N<span class="o">-</span><span class="mi">1</span><span class="o">;</span> kk<span class="o">++)</span></td></tr><tr><th id="L349"><a href="javascript:setLineNum(349)">349</a></th><td>                <span class="o">{</span></td></tr><tr><th id="L350"><a href="javascript:setLineNum(350)">350</a></th><td>                y <span class="o">=</span> <span class="o">(</span>mt<span class="o">[</span>kk<span class="o">]</span> <span class="o">&amp;</span> UPPER_MASK<span class="o">)</span> <span class="o">|</span> <span class="o">(</span>mt<span class="o">[</span>kk<span class="o">+</span><span class="mi">1</span><span class="o">]</span> <span class="o">&amp;</span> LOWER_MASK<span class="o">);</span></td></tr><tr><th id="L351"><a href="javascript:setLineNum(351)">351</a></th><td>                mt<span class="o">[</span>kk<span class="o">]</span> <span class="o">=</span> mt<span class="o">[</span>kk<span class="o">+(</span>M<span class="o">-</span>N<span class="o">)]</span> <span class="o">^</span> <span class="o">(</span>y <span class="o">&gt;&gt;&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">^</span> mag01<span class="o">[</span>y <span class="o">&amp;</span> <span class="mh">0x1</span><span class="o">];</span></td></tr><tr><th id="L352"><a href="javascript:setLineNum(352)">352</a></th><td>                <span class="o">}</span></td></tr><tr><th id="L353"><a href="javascript:setLineNum(353)">353</a></th><td>            y <span class="o">=</span> <span class="o">(</span>mt<span class="o">[</span>N<span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">&amp;</span> UPPER_MASK<span class="o">)</span> <span class="o">|</span> <span class="o">(</span>mt<span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">&amp;</span> LOWER_MASK<span class="o">);</span></td></tr><tr><th id="L354"><a href="javascript:setLineNum(354)">354</a></th><td>            mt<span class="o">[</span>N<span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> mt<span class="o">[</span>M<span class="o">-</span><span class="mi">1</span><span class="o">]</span> <span class="o">^</span> <span class="o">(</span>y <span class="o">&gt;&gt;&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">^</span> mag01<span class="o">[</span>y <span class="o">&amp;</span> <span class="mh">0x1</span><span class="o">];</span></td></tr><tr><th id="L355"><a href="javascript:setLineNum(355)">355</a></th><td></td></tr><tr><th id="L356"><a href="javascript:setLineNum(356)">356</a></th><td>            mti <span class="o">=</span> <span class="mi">0</span><span class="o">;</span></td></tr><tr><th id="L357"><a href="javascript:setLineNum(357)">357</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L358"><a href="javascript:setLineNum(358)">358</a></th><td>  </td></tr><tr><th id="L359"><a href="javascript:setLineNum(359)">359</a></th><td>        y <span class="o">=</span> mt<span class="o">[</span>mti<span class="o">++];</span></td></tr><tr><th id="L360"><a href="javascript:setLineNum(360)">360</a></th><td>        y <span class="o">^=</span> y <span class="o">&gt;&gt;&gt;</span> <span class="mi">11</span><span class="o">;</span>                          <span class="c">// TEMPERING_SHIFT_U(y)</span></td></tr><tr><th id="L361"><a href="javascript:setLineNum(361)">361</a></th><td><span class="c"></span>        y <span class="o">^=</span> <span class="o">(</span>y <span class="o">&lt;&lt;</span> <span class="mi">7</span><span class="o">)</span> <span class="o">&amp;</span> TEMPERING_MASK_B<span class="o">;</span>       <span class="c">// TEMPERING_SHIFT_S(y)</span></td></tr><tr><th id="L362"><a href="javascript:setLineNum(362)">362</a></th><td><span class="c"></span>        y <span class="o">^=</span> <span class="o">(</span>y <span class="o">&lt;&lt;</span> <span class="mi">15</span><span class="o">)</span> <span class="o">&amp;</span> TEMPERING_MASK_C<span class="o">;</span>      <span class="c">// TEMPERING_SHIFT_T(y)</span></td></tr><tr><th id="L363"><a href="javascript:setLineNum(363)">363</a></th><td><span class="c"></span>        y <span class="o">^=</span> <span class="o">(</span>y <span class="o">&gt;&gt;&gt;</span> <span class="mi">18</span><span class="o">);</span>                        <span class="c">// TEMPERING_SHIFT_L(y)</span></td></tr><tr><th id="L364"><a href="javascript:setLineNum(364)">364</a></th><td><span class="c"></span></td></tr><tr><th id="L365"><a href="javascript:setLineNum(365)">365</a></th><td>        <span class="k">return</span> y <span class="o">&gt;&gt;&gt;</span> <span class="o">(</span><span class="mi">32</span> <span class="o">-</span> bits<span class="o">);</span>    <span class="c">// hope that's right!</span></td></tr><tr><th id="L366"><a href="javascript:setLineNum(366)">366</a></th><td><span class="c"></span>        <span class="o">}</span></td></tr><tr><th id="L367"><a href="javascript:setLineNum(367)">367</a></th><td>    </td></tr><tr><th id="L368"><a href="javascript:setLineNum(368)">368</a></th><td>    <span class="c">/* If you've got a truly old version of Java, you can omit these</span></td></tr><tr><th id="L369"><a href="javascript:setLineNum(369)">369</a></th><td><span class="c">       two next methods. */</span></td></tr><tr><th id="L370"><a href="javascript:setLineNum(370)">370</a></th><td></td></tr><tr><th id="L371"><a href="javascript:setLineNum(371)">371</a></th><td>    <span class="k">private</span> <span class="k">synchronized</span> <span class="kt">void</span> <span class="nf">writeObject</span><span class="o">(</span><span class="k">final</span> ObjectOutputStream out<span class="o">)</span></td></tr><tr><th id="L372"><a href="javascript:setLineNum(372)">372</a></th><td>        <span class="k">throws</span> IOException</td></tr><tr><th id="L373"><a href="javascript:setLineNum(373)">373</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L374"><a href="javascript:setLineNum(374)">374</a></th><td>        <span class="c">// just so we're synchronized.</span></td></tr><tr><th id="L375"><a href="javascript:setLineNum(375)">375</a></th><td><span class="c"></span>        out<span class="o">.</span><span class="na">defaultWriteObject</span><span class="o">();</span></td></tr><tr><th id="L376"><a href="javascript:setLineNum(376)">376</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L377"><a href="javascript:setLineNum(377)">377</a></th><td></td></tr><tr><th id="L378"><a href="javascript:setLineNum(378)">378</a></th><td>    <span class="k">private</span> <span class="k">synchronized</span> <span class="kt">void</span> <span class="nf">readObject</span> <span class="o">(</span><span class="k">final</span> ObjectInputStream in<span class="o">)</span> </td></tr><tr><th id="L379"><a href="javascript:setLineNum(379)">379</a></th><td>        <span class="k">throws</span> IOException<span class="o">,</span> ClassNotFoundException</td></tr><tr><th id="L380"><a href="javascript:setLineNum(380)">380</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L381"><a href="javascript:setLineNum(381)">381</a></th><td>        <span class="c">// just so we're synchronized.</span></td></tr><tr><th id="L382"><a href="javascript:setLineNum(382)">382</a></th><td><span class="c"></span>        in<span class="o">.</span><span class="na">defaultReadObject</span><span class="o">();</span></td></tr><tr><th id="L383"><a href="javascript:setLineNum(383)">383</a></th><td>        <span class="o">}</span>    </td></tr><tr><th id="L384"><a href="javascript:setLineNum(384)">384</a></th><td></td></tr><tr><th id="L385"><a href="javascript:setLineNum(385)">385</a></th><td>    <span class="c">/** This method is missing from jdk 1.0.x and below.  JDK 1.1</span></td></tr><tr><th id="L386"><a href="javascript:setLineNum(386)">386</a></th><td><span class="c">        includes this for us, but what the heck.*/</span></td></tr><tr><th id="L387"><a href="javascript:setLineNum(387)">387</a></th><td>    <span class="k">public</span> <span class="kt">boolean</span> <span class="nf">nextBoolean</span><span class="o">()</span> <span class="o">{</span><span class="k">return</span> next<span class="o">(</span><span class="mi">1</span><span class="o">)</span> <span class="o">!=</span> <span class="mi">0</span><span class="o">;}</span></td></tr><tr><th id="L388"><a href="javascript:setLineNum(388)">388</a></th><td></td></tr><tr><th id="L389"><a href="javascript:setLineNum(389)">389</a></th><td>    <span class="c">/** This generates a coin flip with a probability &lt;tt&gt;probability&lt;/tt&gt;</span></td></tr><tr><th id="L390"><a href="javascript:setLineNum(390)">390</a></th><td><span class="c">        of returning true, else returning false. &lt;tt&gt;probability&lt;/tt&gt; must</span></td></tr><tr><th id="L391"><a href="javascript:setLineNum(391)">391</a></th><td><span class="c">        be between 0.0 and 1.0, inclusive.  Not as precise a random real</span></td></tr><tr><th id="L392"><a href="javascript:setLineNum(392)">392</a></th><td><span class="c">        event as nextBoolean(double), but twice as fast. To explicitly</span></td></tr><tr><th id="L393"><a href="javascript:setLineNum(393)">393</a></th><td><span class="c">        use this, remember you may need to cast to float first. */</span></td></tr><tr><th id="L394"><a href="javascript:setLineNum(394)">394</a></th><td></td></tr><tr><th id="L395"><a href="javascript:setLineNum(395)">395</a></th><td>    <span class="k">public</span> <span class="kt">boolean</span> <span class="nf">nextBoolean</span> <span class="o">(</span><span class="k">final</span> <span class="kt">float</span> probability<span class="o">)</span></td></tr><tr><th id="L396"><a href="javascript:setLineNum(396)">396</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L397"><a href="javascript:setLineNum(397)">397</a></th><td>        <span class="k">if</span> <span class="o">(</span>probability <span class="o">&lt;</span> <span class="mf">0.0f</span> <span class="o">||</span> probability <span class="o">&gt;</span> <span class="mf">1.0f</span><span class="o">)</span></td></tr><tr><th id="L398"><a href="javascript:setLineNum(398)">398</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span> <span class="o">(</span><span class="s">"probability must be between 0.0 and 1.0 inclusive."</span><span class="o">);</span></td></tr><tr><th id="L399"><a href="javascript:setLineNum(399)">399</a></th><td>        <span class="k">if</span> <span class="o">(</span>probability<span class="o">==</span><span class="mf">0.0f</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>            <span class="c">// fix half-open issues</span></td></tr><tr><th id="L400"><a href="javascript:setLineNum(400)">400</a></th><td><span class="c"></span>        <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span>probability<span class="o">==</span><span class="mf">1.0f</span><span class="o">)</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span>        <span class="c">// fix half-open issues</span></td></tr><tr><th id="L401"><a href="javascript:setLineNum(401)">401</a></th><td><span class="c"></span>        <span class="k">return</span> <span class="nf">nextFloat</span><span class="o">()</span> <span class="o">&lt;</span> probability<span class="o">;</span> </td></tr><tr><th id="L402"><a href="javascript:setLineNum(402)">402</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L403"><a href="javascript:setLineNum(403)">403</a></th><td></td></tr><tr><th id="L404"><a href="javascript:setLineNum(404)">404</a></th><td>    <span class="c">/** This generates a coin flip with a probability &lt;tt&gt;probability&lt;/tt&gt;</span></td></tr><tr><th id="L405"><a href="javascript:setLineNum(405)">405</a></th><td><span class="c">        of returning true, else returning false. &lt;tt&gt;probability&lt;/tt&gt; must</span></td></tr><tr><th id="L406"><a href="javascript:setLineNum(406)">406</a></th><td><span class="c">        be between 0.0 and 1.0, inclusive. */</span></td></tr><tr><th id="L407"><a href="javascript:setLineNum(407)">407</a></th><td></td></tr><tr><th id="L408"><a href="javascript:setLineNum(408)">408</a></th><td>    <span class="k">public</span> <span class="kt">boolean</span> <span class="nf">nextBoolean</span> <span class="o">(</span><span class="k">final</span> <span class="kt">double</span> probability<span class="o">)</span></td></tr><tr><th id="L409"><a href="javascript:setLineNum(409)">409</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L410"><a href="javascript:setLineNum(410)">410</a></th><td>        <span class="k">if</span> <span class="o">(</span>probability <span class="o">&lt;</span> <span class="mf">0.0</span> <span class="o">||</span> probability <span class="o">&gt;</span> <span class="mf">1.0</span><span class="o">)</span></td></tr><tr><th id="L411"><a href="javascript:setLineNum(411)">411</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span> <span class="o">(</span><span class="s">"probability must be between 0.0 and 1.0 inclusive."</span><span class="o">);</span></td></tr><tr><th id="L412"><a href="javascript:setLineNum(412)">412</a></th><td>        <span class="k">if</span> <span class="o">(</span>probability<span class="o">==</span><span class="mf">0.0</span><span class="o">)</span> <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>             <span class="c">// fix half-open issues</span></td></tr><tr><th id="L413"><a href="javascript:setLineNum(413)">413</a></th><td><span class="c"></span>        <span class="k">else</span> <span class="nf">if</span> <span class="o">(</span>probability<span class="o">==</span><span class="mf">1.0</span><span class="o">)</span> <span class="k">return</span> <span class="kc">true</span><span class="o">;</span> <span class="c">// fix half-open issues</span></td></tr><tr><th id="L414"><a href="javascript:setLineNum(414)">414</a></th><td><span class="c"></span>        <span class="k">return</span> <span class="nf">nextDouble</span><span class="o">()</span> <span class="o">&lt;</span> probability<span class="o">;</span> </td></tr><tr><th id="L415"><a href="javascript:setLineNum(415)">415</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L416"><a href="javascript:setLineNum(416)">416</a></th><td>        </td></tr><tr><th id="L417"><a href="javascript:setLineNum(417)">417</a></th><td>    <span class="c">/** This method is missing from JDK 1.1 and below.  JDK 1.2</span></td></tr><tr><th id="L418"><a href="javascript:setLineNum(418)">418</a></th><td><span class="c">        includes this for us, but what the heck. */</span></td></tr><tr><th id="L419"><a href="javascript:setLineNum(419)">419</a></th><td></td></tr><tr><th id="L420"><a href="javascript:setLineNum(420)">420</a></th><td>    <span class="k">public</span> <span class="kt">int</span> <span class="nf">nextInt</span><span class="o">(</span><span class="k">final</span> <span class="kt">int</span> n<span class="o">)</span> </td></tr><tr><th id="L421"><a href="javascript:setLineNum(421)">421</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L422"><a href="javascript:setLineNum(422)">422</a></th><td>        <span class="k">if</span> <span class="o">(</span>n<span class="o">&lt;=</span><span class="mi">0</span><span class="o">)</span></td></tr><tr><th id="L423"><a href="javascript:setLineNum(423)">423</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">"n must be &gt; 0"</span><span class="o">);</span></td></tr><tr><th id="L424"><a href="javascript:setLineNum(424)">424</a></th><td>        </td></tr><tr><th id="L425"><a href="javascript:setLineNum(425)">425</a></th><td>        <span class="k">if</span> <span class="o">((</span>n <span class="o">&amp;</span> <span class="o">-</span>n<span class="o">)</span> <span class="o">==</span> n<span class="o">)</span></td></tr><tr><th id="L426"><a href="javascript:setLineNum(426)">426</a></th><td>            <span class="k">return</span> <span class="o">(</span><span class="kt">int</span><span class="o">)((</span>n <span class="o">*</span> <span class="o">(</span><span class="kt">long</span><span class="o">)</span>next<span class="o">(</span><span class="mi">31</span><span class="o">))</span> <span class="o">&gt;&gt;</span> <span class="mi">31</span><span class="o">);</span></td></tr><tr><th id="L427"><a href="javascript:setLineNum(427)">427</a></th><td>        </td></tr><tr><th id="L428"><a href="javascript:setLineNum(428)">428</a></th><td>        <span class="kt">int</span> bits<span class="o">,</span> val<span class="o">;</span></td></tr><tr><th id="L429"><a href="javascript:setLineNum(429)">429</a></th><td>        <span class="k">do</span> </td></tr><tr><th id="L430"><a href="javascript:setLineNum(430)">430</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L431"><a href="javascript:setLineNum(431)">431</a></th><td>            bits <span class="o">=</span> next<span class="o">(</span><span class="mi">31</span><span class="o">);</span></td></tr><tr><th id="L432"><a href="javascript:setLineNum(432)">432</a></th><td>            val <span class="o">=</span> bits <span class="o">%</span> n<span class="o">;</span></td></tr><tr><th id="L433"><a href="javascript:setLineNum(433)">433</a></th><td>            <span class="o">}</span> </td></tr><tr><th id="L434"><a href="javascript:setLineNum(434)">434</a></th><td>        <span class="k">while</span><span class="o">(</span>bits <span class="o">-</span> val <span class="o">+</span> <span class="o">(</span>n<span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">);</span></td></tr><tr><th id="L435"><a href="javascript:setLineNum(435)">435</a></th><td>        <span class="k">return</span> val<span class="o">;</span></td></tr><tr><th id="L436"><a href="javascript:setLineNum(436)">436</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L437"><a href="javascript:setLineNum(437)">437</a></th><td></td></tr><tr><th id="L438"><a href="javascript:setLineNum(438)">438</a></th><td>    <span class="c">/** This method is for completness' sake. </span></td></tr><tr><th id="L439"><a href="javascript:setLineNum(439)">439</a></th><td><span class="c">        Returns a long drawn uniformly from 0 to n-1.  Suffice it to say,</span></td></tr><tr><th id="L440"><a href="javascript:setLineNum(440)">440</a></th><td><span class="c">        n must be &gt; 0, or an IllegalArgumentException is raised. */</span></td></tr><tr><th id="L441"><a href="javascript:setLineNum(441)">441</a></th><td>    </td></tr><tr><th id="L442"><a href="javascript:setLineNum(442)">442</a></th><td>    <span class="k">public</span> <span class="kt">long</span> <span class="nf">nextLong</span><span class="o">(</span><span class="k">final</span> <span class="kt">long</span> n<span class="o">)</span> </td></tr><tr><th id="L443"><a href="javascript:setLineNum(443)">443</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L444"><a href="javascript:setLineNum(444)">444</a></th><td>        <span class="k">if</span> <span class="o">(</span>n<span class="o">&lt;=</span><span class="mi">0</span><span class="o">)</span></td></tr><tr><th id="L445"><a href="javascript:setLineNum(445)">445</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">"n must be &gt; 0"</span><span class="o">);</span></td></tr><tr><th id="L446"><a href="javascript:setLineNum(446)">446</a></th><td>        </td></tr><tr><th id="L447"><a href="javascript:setLineNum(447)">447</a></th><td>        <span class="kt">long</span> bits<span class="o">,</span> val<span class="o">;</span></td></tr><tr><th id="L448"><a href="javascript:setLineNum(448)">448</a></th><td>        <span class="k">do</span> </td></tr><tr><th id="L449"><a href="javascript:setLineNum(449)">449</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L450"><a href="javascript:setLineNum(450)">450</a></th><td>            bits <span class="o">=</span> <span class="o">(</span>nextLong<span class="o">()</span> <span class="o">&gt;&gt;&gt;</span> <span class="mi">1</span><span class="o">);</span></td></tr><tr><th id="L451"><a href="javascript:setLineNum(451)">451</a></th><td>            val <span class="o">=</span> bits <span class="o">%</span> n<span class="o">;</span></td></tr><tr><th id="L452"><a href="javascript:setLineNum(452)">452</a></th><td>            <span class="o">}</span> </td></tr><tr><th id="L453"><a href="javascript:setLineNum(453)">453</a></th><td>        <span class="k">while</span><span class="o">(</span>bits <span class="o">-</span> val <span class="o">+</span> <span class="o">(</span>n<span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="o">);</span></td></tr><tr><th id="L454"><a href="javascript:setLineNum(454)">454</a></th><td>        <span class="k">return</span> val<span class="o">;</span></td></tr><tr><th id="L455"><a href="javascript:setLineNum(455)">455</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L456"><a href="javascript:setLineNum(456)">456</a></th><td></td></tr><tr><th id="L457"><a href="javascript:setLineNum(457)">457</a></th><td></td></tr><tr><th id="L458"><a href="javascript:setLineNum(458)">458</a></th><td>    <span class="c">/** A bug fix for versions of JDK 1.1 and below.  JDK 1.2 fixes</span></td></tr><tr><th id="L459"><a href="javascript:setLineNum(459)">459</a></th><td><span class="c">        this for us, but what the heck. */</span></td></tr><tr><th id="L460"><a href="javascript:setLineNum(460)">460</a></th><td>    <span class="k">public</span> <span class="kt">double</span> <span class="nf">nextDouble</span><span class="o">()</span></td></tr><tr><th id="L461"><a href="javascript:setLineNum(461)">461</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L462"><a href="javascript:setLineNum(462)">462</a></th><td>        <span class="k">return</span> <span class="o">(((</span><span class="kt">long</span><span class="o">)</span>next<span class="o">(</span><span class="mi">26</span><span class="o">)</span> <span class="o">&lt;&lt;</span> <span class="mi">27</span><span class="o">)</span> <span class="o">+</span> next<span class="o">(</span><span class="mi">27</span><span class="o">))</span></td></tr><tr><th id="L463"><a href="javascript:setLineNum(463)">463</a></th><td>            <span class="o">/</span> <span class="o">(</span><span class="kt">double</span><span class="o">)(</span><span class="mi">1L</span> <span class="o">&lt;&lt;</span> <span class="mi">53</span><span class="o">);</span></td></tr><tr><th id="L464"><a href="javascript:setLineNum(464)">464</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L465"><a href="javascript:setLineNum(465)">465</a></th><td></td></tr><tr><th id="L466"><a href="javascript:setLineNum(466)">466</a></th><td>    <span class="c">/** A bug fix for versions of JDK 1.1 and below.  JDK 1.2 fixes</span></td></tr><tr><th id="L467"><a href="javascript:setLineNum(467)">467</a></th><td><span class="c">        this for us, but what the heck. */</span></td></tr><tr><th id="L468"><a href="javascript:setLineNum(468)">468</a></th><td></td></tr><tr><th id="L469"><a href="javascript:setLineNum(469)">469</a></th><td>    <span class="k">public</span> <span class="kt">float</span> <span class="nf">nextFloat</span><span class="o">()</span></td></tr><tr><th id="L470"><a href="javascript:setLineNum(470)">470</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L471"><a href="javascript:setLineNum(471)">471</a></th><td>        <span class="k">return</span> <span class="nf">next</span><span class="o">(</span><span class="mi">24</span><span class="o">)</span> <span class="o">/</span> <span class="o">((</span><span class="kt">float</span><span class="o">)(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">24</span><span class="o">));</span></td></tr><tr><th id="L472"><a href="javascript:setLineNum(472)">472</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L473"><a href="javascript:setLineNum(473)">473</a></th><td></td></tr><tr><th id="L474"><a href="javascript:setLineNum(474)">474</a></th><td>    <span class="c">/** A bug fix for all versions of the JDK.  The JDK appears to</span></td></tr><tr><th id="L475"><a href="javascript:setLineNum(475)">475</a></th><td><span class="c">        use all four bytes in an integer as independent byte values!</span></td></tr><tr><th id="L476"><a href="javascript:setLineNum(476)">476</a></th><td><span class="c">        Totally wrong. I've submitted a bug report. */</span></td></tr><tr><th id="L477"><a href="javascript:setLineNum(477)">477</a></th><td></td></tr><tr><th id="L478"><a href="javascript:setLineNum(478)">478</a></th><td>    <span class="k">public</span> <span class="kt">void</span> <span class="nf">nextBytes</span><span class="o">(</span><span class="k">final</span> <span class="kt">byte</span><span class="o">[]</span> bytes<span class="o">)</span>    </td></tr><tr><th id="L479"><a href="javascript:setLineNum(479)">479</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L480"><a href="javascript:setLineNum(480)">480</a></th><td>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> x<span class="o">=</span><span class="mi">0</span><span class="o">;</span>x<span class="o">&lt;</span>bytes<span class="o">.</span><span class="na">length</span><span class="o">;</span>x<span class="o">++)</span> bytes<span class="o">[</span>x<span class="o">]</span> <span class="o">=</span> <span class="o">(</span><span class="kt">byte</span><span class="o">)</span>next<span class="o">(</span><span class="mi">8</span><span class="o">);</span></td></tr><tr><th id="L481"><a href="javascript:setLineNum(481)">481</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L482"><a href="javascript:setLineNum(482)">482</a></th><td></td></tr><tr><th id="L483"><a href="javascript:setLineNum(483)">483</a></th><td>    <span class="c">/** For completeness' sake, though it's not in java.util.Random.  */</span></td></tr><tr><th id="L484"><a href="javascript:setLineNum(484)">484</a></th><td>    </td></tr><tr><th id="L485"><a href="javascript:setLineNum(485)">485</a></th><td>    <span class="k">public</span> <span class="kt">char</span> <span class="nf">nextChar</span><span class="o">()</span></td></tr><tr><th id="L486"><a href="javascript:setLineNum(486)">486</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L487"><a href="javascript:setLineNum(487)">487</a></th><td>        <span class="c">// chars are 16-bit UniCode values</span></td></tr><tr><th id="L488"><a href="javascript:setLineNum(488)">488</a></th><td><span class="c"></span>        <span class="k">return</span> <span class="o">(</span><span class="kt">char</span><span class="o">)(</span>next<span class="o">(</span><span class="mi">16</span><span class="o">));</span></td></tr><tr><th id="L489"><a href="javascript:setLineNum(489)">489</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L490"><a href="javascript:setLineNum(490)">490</a></th><td></td></tr><tr><th id="L491"><a href="javascript:setLineNum(491)">491</a></th><td>    <span class="c">/** For completeness' sake, though it's not in java.util.Random. */</span></td></tr><tr><th id="L492"><a href="javascript:setLineNum(492)">492</a></th><td>    </td></tr><tr><th id="L493"><a href="javascript:setLineNum(493)">493</a></th><td>    <span class="k">public</span> <span class="kt">short</span> <span class="nf">nextShort</span><span class="o">()</span></td></tr><tr><th id="L494"><a href="javascript:setLineNum(494)">494</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L495"><a href="javascript:setLineNum(495)">495</a></th><td>        <span class="k">return</span> <span class="o">(</span><span class="kt">short</span><span class="o">)(</span>next<span class="o">(</span><span class="mi">16</span><span class="o">));</span></td></tr><tr><th id="L496"><a href="javascript:setLineNum(496)">496</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L497"><a href="javascript:setLineNum(497)">497</a></th><td></td></tr><tr><th id="L498"><a href="javascript:setLineNum(498)">498</a></th><td>    <span class="c">/** For completeness' sake, though it's not in java.util.Random.  */</span></td></tr><tr><th id="L499"><a href="javascript:setLineNum(499)">499</a></th><td></td></tr><tr><th id="L500"><a href="javascript:setLineNum(500)">500</a></th><td>    <span class="k">public</span> <span class="kt">byte</span> <span class="nf">nextByte</span><span class="o">()</span></td></tr><tr><th id="L501"><a href="javascript:setLineNum(501)">501</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L502"><a href="javascript:setLineNum(502)">502</a></th><td>        <span class="k">return</span> <span class="o">(</span><span class="kt">byte</span><span class="o">)(</span>next<span class="o">(</span><span class="mi">8</span><span class="o">));</span></td></tr><tr><th id="L503"><a href="javascript:setLineNum(503)">503</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L504"><a href="javascript:setLineNum(504)">504</a></th><td></td></tr><tr><th id="L505"><a href="javascript:setLineNum(505)">505</a></th><td></td></tr><tr><th id="L506"><a href="javascript:setLineNum(506)">506</a></th><td>    <span class="c">/** A bug fix for all JDK code including 1.2.  nextGaussian can theoretically</span></td></tr><tr><th id="L507"><a href="javascript:setLineNum(507)">507</a></th><td><span class="c">        ask for the log of 0 and divide it by 0! See Java bug </span></td></tr><tr><th id="L508"><a href="javascript:setLineNum(508)">508</a></th><td><span class="c">        &lt;a href="http://developer.java.sun.com/developer/bugParade/bugs/4254501.html"&gt;</span></td></tr><tr><th id="L509"><a href="javascript:setLineNum(509)">509</a></th><td><span class="c">        http://developer.java.sun.com/developer/bugParade/bugs/4254501.html&lt;/a&gt;</span></td></tr><tr><th id="L510"><a href="javascript:setLineNum(510)">510</a></th><td><span class="c">    */</span></td></tr><tr><th id="L511"><a href="javascript:setLineNum(511)">511</a></th><td></td></tr><tr><th id="L512"><a href="javascript:setLineNum(512)">512</a></th><td>    <span class="k">synchronized</span> <span class="k">public</span> <span class="kt">double</span> <span class="nf">nextGaussian</span><span class="o">()</span> </td></tr><tr><th id="L513"><a href="javascript:setLineNum(513)">513</a></th><td>        <span class="o">{</span></td></tr><tr><th id="L514"><a href="javascript:setLineNum(514)">514</a></th><td>        <span class="k">if</span> <span class="o">(</span>__haveNextNextGaussian<span class="o">)</span> </td></tr><tr><th id="L515"><a href="javascript:setLineNum(515)">515</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L516"><a href="javascript:setLineNum(516)">516</a></th><td>            __haveNextNextGaussian <span class="o">=</span> <span class="kc">false</span><span class="o">;</span></td></tr><tr><th id="L517"><a href="javascript:setLineNum(517)">517</a></th><td>            <span class="k">return</span> __nextNextGaussian<span class="o">;</span></td></tr><tr><th id="L518"><a href="javascript:setLineNum(518)">518</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L519"><a href="javascript:setLineNum(519)">519</a></th><td>        <span class="k">else</span> </td></tr><tr><th id="L520"><a href="javascript:setLineNum(520)">520</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L521"><a href="javascript:setLineNum(521)">521</a></th><td>            <span class="kt">double</span> v1<span class="o">,</span> v2<span class="o">,</span> s<span class="o">;</span></td></tr><tr><th id="L522"><a href="javascript:setLineNum(522)">522</a></th><td>            <span class="k">do</span> </td></tr><tr><th id="L523"><a href="javascript:setLineNum(523)">523</a></th><td>                <span class="o">{</span> </td></tr><tr><th id="L524"><a href="javascript:setLineNum(524)">524</a></th><td>                v1 <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> nextDouble<span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="c">// between -1.0 and 1.0</span></td></tr><tr><th id="L525"><a href="javascript:setLineNum(525)">525</a></th><td><span class="c"></span>                v2 <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> nextDouble<span class="o">()</span> <span class="o">-</span> <span class="mi">1</span><span class="o">;</span> <span class="c">// between -1.0 and 1.0</span></td></tr><tr><th id="L526"><a href="javascript:setLineNum(526)">526</a></th><td><span class="c"></span>                s <span class="o">=</span> v1 <span class="o">*</span> v1 <span class="o">+</span> v2 <span class="o">*</span> v2<span class="o">;</span></td></tr><tr><th id="L527"><a href="javascript:setLineNum(527)">527</a></th><td>                <span class="o">}</span> <span class="k">while</span> <span class="o">(</span>s <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">||</span> s<span class="o">==</span><span class="mi">0</span> <span class="o">);</span></td></tr><tr><th id="L528"><a href="javascript:setLineNum(528)">528</a></th><td>            <span class="kt">double</span> multiplier <span class="o">=</span> <span class="c">/*Strict*/</span>Math<span class="o">.</span><span class="na">sqrt</span><span class="o">(-</span><span class="mi">2</span> <span class="o">*</span> <span class="c">/*Strict*/</span>Math<span class="o">.</span><span class="na">log</span><span class="o">(</span>s<span class="o">)/</span>s<span class="o">);</span></td></tr><tr><th id="L529"><a href="javascript:setLineNum(529)">529</a></th><td>            __nextNextGaussian <span class="o">=</span> v2 <span class="o">*</span> multiplier<span class="o">;</span></td></tr><tr><th id="L530"><a href="javascript:setLineNum(530)">530</a></th><td>            __haveNextNextGaussian <span class="o">=</span> <span class="kc">true</span><span class="o">;</span></td></tr><tr><th id="L531"><a href="javascript:setLineNum(531)">531</a></th><td>            <span class="k">return</span> v1 <span class="o">*</span> multiplier<span class="o">;</span></td></tr><tr><th id="L532"><a href="javascript:setLineNum(532)">532</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L533"><a href="javascript:setLineNum(533)">533</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L534"><a href="javascript:setLineNum(534)">534</a></th><td>    </td></tr><tr><th id="L535"><a href="javascript:setLineNum(535)">535</a></th><td>    <span class="c">/**</span></td></tr><tr><th id="L536"><a href="javascript:setLineNum(536)">536</a></th><td><span class="c">     * Tests the code.</span></td></tr><tr><th id="L537"><a href="javascript:setLineNum(537)">537</a></th><td><span class="c">     */</span></td></tr><tr><th id="L538"><a href="javascript:setLineNum(538)">538</a></th><td>    <span class="k">public</span> <span class="k">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span>String args<span class="o">[])</span></td></tr><tr><th id="L539"><a href="javascript:setLineNum(539)">539</a></th><td>        <span class="o">{</span> </td></tr><tr><th id="L540"><a href="javascript:setLineNum(540)">540</a></th><td>        <span class="kt">int</span> j<span class="o">;</span></td></tr><tr><th id="L541"><a href="javascript:setLineNum(541)">541</a></th><td></td></tr><tr><th id="L542"><a href="javascript:setLineNum(542)">542</a></th><td>        MersenneTwister r<span class="o">;</span></td></tr><tr><th id="L543"><a href="javascript:setLineNum(543)">543</a></th><td></td></tr><tr><th id="L544"><a href="javascript:setLineNum(544)">544</a></th><td>        <span class="c">// CORRECTNESS TEST</span></td></tr><tr><th id="L545"><a href="javascript:setLineNum(545)">545</a></th><td><span class="c"></span>        <span class="c">// COMPARE WITH http://www.math.keio.ac.jp/matumoto/CODES/MT2002/mt19937ar.out</span></td></tr><tr><th id="L546"><a href="javascript:setLineNum(546)">546</a></th><td><span class="c"></span>        </td></tr><tr><th id="L547"><a href="javascript:setLineNum(547)">547</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span><span class="k">new</span> <span class="kt">int</span><span class="o">[]{</span><span class="mh">0x123</span><span class="o">,</span> <span class="mh">0x234</span><span class="o">,</span> <span class="mh">0x345</span><span class="o">,</span> <span class="mh">0x456</span><span class="o">});</span></td></tr><tr><th id="L548"><a href="javascript:setLineNum(548)">548</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Output of MersenneTwister with new (2002/1/26) seeding mechanism"</span><span class="o">);</span></td></tr><tr><th id="L549"><a href="javascript:setLineNum(549)">549</a></th><td>        <span class="k">for</span> <span class="o">(</span>j<span class="o">=</span><span class="mi">0</span><span class="o">;</span>j<span class="o">&lt;</span><span class="mi">1000</span><span class="o">;</span>j<span class="o">++)</span></td></tr><tr><th id="L550"><a href="javascript:setLineNum(550)">550</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L551"><a href="javascript:setLineNum(551)">551</a></th><td>            <span class="c">// first, convert the int from signed to "unsigned"</span></td></tr><tr><th id="L552"><a href="javascript:setLineNum(552)">552</a></th><td><span class="c"></span>            <span class="kt">long</span> l <span class="o">=</span> <span class="o">(</span><span class="kt">long</span><span class="o">)</span>r<span class="o">.</span><span class="na">nextInt</span><span class="o">();</span></td></tr><tr><th id="L553"><a href="javascript:setLineNum(553)">553</a></th><td>            <span class="k">if</span> <span class="o">(</span>l <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">)</span> l <span class="o">+=</span> <span class="mi">4294967296L</span><span class="o">;</span>  <span class="c">// max int value</span></td></tr><tr><th id="L554"><a href="javascript:setLineNum(554)">554</a></th><td><span class="c"></span>            String s <span class="o">=</span> String<span class="o">.</span><span class="na">valueOf</span><span class="o">(</span>l<span class="o">);</span></td></tr><tr><th id="L555"><a href="javascript:setLineNum(555)">555</a></th><td>            <span class="k">while</span><span class="o">(</span>s<span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> s <span class="o">=</span> <span class="s">" "</span> <span class="o">+</span> s<span class="o">;</span>  <span class="c">// buffer</span></td></tr><tr><th id="L556"><a href="javascript:setLineNum(556)">556</a></th><td><span class="c"></span>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>s <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L557"><a href="javascript:setLineNum(557)">557</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">5</span><span class="o">==</span><span class="mi">4</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span>       </td></tr><tr><th id="L558"><a href="javascript:setLineNum(558)">558</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L559"><a href="javascript:setLineNum(559)">559</a></th><td></td></tr><tr><th id="L560"><a href="javascript:setLineNum(560)">560</a></th><td>        <span class="c">// SPEED TEST</span></td></tr><tr><th id="L561"><a href="javascript:setLineNum(561)">561</a></th><td><span class="c"></span></td></tr><tr><th id="L562"><a href="javascript:setLineNum(562)">562</a></th><td>        <span class="k">final</span> <span class="kt">long</span> SEED <span class="o">=</span> <span class="mi">4357</span><span class="o">;</span></td></tr><tr><th id="L563"><a href="javascript:setLineNum(563)">563</a></th><td></td></tr><tr><th id="L564"><a href="javascript:setLineNum(564)">564</a></th><td>        <span class="kt">int</span> xx<span class="o">;</span> <span class="kt">long</span> ms<span class="o">;</span></td></tr><tr><th id="L565"><a href="javascript:setLineNum(565)">565</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nTime to test grabbing 100000000 ints"</span><span class="o">);</span></td></tr><tr><th id="L566"><a href="javascript:setLineNum(566)">566</a></th><td>          </td></tr><tr><th id="L567"><a href="javascript:setLineNum(567)">567</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L568"><a href="javascript:setLineNum(568)">568</a></th><td>        ms <span class="o">=</span> System<span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span></td></tr><tr><th id="L569"><a href="javascript:setLineNum(569)">569</a></th><td>        xx<span class="o">=</span><span class="mi">0</span><span class="o">;</span></td></tr><tr><th id="L570"><a href="javascript:setLineNum(570)">570</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">100000000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L571"><a href="javascript:setLineNum(571)">571</a></th><td>            xx <span class="o">+=</span> r<span class="o">.</span><span class="na">nextInt</span><span class="o">();</span></td></tr><tr><th id="L572"><a href="javascript:setLineNum(572)">572</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Mersenne Twister: "</span> <span class="o">+</span> <span class="o">(</span>System<span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()-</span>ms<span class="o">)</span> <span class="o">+</span> <span class="s">"          Ignore this: "</span> <span class="o">+</span> xx<span class="o">);</span></td></tr><tr><th id="L573"><a href="javascript:setLineNum(573)">573</a></th><td></td></tr><tr><th id="L574"><a href="javascript:setLineNum(574)">574</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"To compare this with java.util.Random, run this same test on MersenneTwisterFast."</span><span class="o">);</span></td></tr><tr><th id="L575"><a href="javascript:setLineNum(575)">575</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The comparison with Random is removed from MersenneTwister because it is a proper"</span><span class="o">);</span></td></tr><tr><th id="L576"><a href="javascript:setLineNum(576)">576</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"subclass of Random and this unfairly makes some of Random's methods un-inlinable,"</span><span class="o">);</span></td></tr><tr><th id="L577"><a href="javascript:setLineNum(577)">577</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"so it would make Random look worse than it is."</span><span class="o">);</span></td></tr><tr><th id="L578"><a href="javascript:setLineNum(578)">578</a></th><td></td></tr><tr><th id="L579"><a href="javascript:setLineNum(579)">579</a></th><td>        <span class="c">// TEST TO COMPARE TYPE CONVERSION BETWEEN</span></td></tr><tr><th id="L580"><a href="javascript:setLineNum(580)">580</a></th><td><span class="c"></span>        <span class="c">// MersenneTwisterFast.java AND MersenneTwister.java</span></td></tr><tr><th id="L581"><a href="javascript:setLineNum(581)">581</a></th><td><span class="c"></span></td></tr><tr><th id="L582"><a href="javascript:setLineNum(582)">582</a></th><td>        </td></tr><tr><th id="L583"><a href="javascript:setLineNum(583)">583</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 booleans"</span><span class="o">);</span></td></tr><tr><th id="L584"><a href="javascript:setLineNum(584)">584</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L585"><a href="javascript:setLineNum(585)">585</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L586"><a href="javascript:setLineNum(586)">586</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L587"><a href="javascript:setLineNum(587)">587</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextBoolean</span><span class="o">()</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L588"><a href="javascript:setLineNum(588)">588</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">8</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L589"><a href="javascript:setLineNum(589)">589</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L590"><a href="javascript:setLineNum(590)">590</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">8</span><span class="o">==</span><span class="mi">7</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L591"><a href="javascript:setLineNum(591)">591</a></th><td>          </td></tr><tr><th id="L592"><a href="javascript:setLineNum(592)">592</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab 1000 booleans of increasing probability using nextBoolean(double)"</span><span class="o">);</span></td></tr><tr><th id="L593"><a href="javascript:setLineNum(593)">593</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L594"><a href="javascript:setLineNum(594)">594</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L595"><a href="javascript:setLineNum(595)">595</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L596"><a href="javascript:setLineNum(596)">596</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextBoolean</span><span class="o">((</span><span class="kt">double</span><span class="o">)(</span>j<span class="o">/</span><span class="mf">999.0</span><span class="o">))</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L597"><a href="javascript:setLineNum(597)">597</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">8</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L598"><a href="javascript:setLineNum(598)">598</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L599"><a href="javascript:setLineNum(599)">599</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">8</span><span class="o">==</span><span class="mi">7</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L600"><a href="javascript:setLineNum(600)">600</a></th><td>          </td></tr><tr><th id="L601"><a href="javascript:setLineNum(601)">601</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab 1000 booleans of increasing probability using nextBoolean(float)"</span><span class="o">);</span></td></tr><tr><th id="L602"><a href="javascript:setLineNum(602)">602</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L603"><a href="javascript:setLineNum(603)">603</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L604"><a href="javascript:setLineNum(604)">604</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L605"><a href="javascript:setLineNum(605)">605</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextBoolean</span><span class="o">((</span><span class="kt">float</span><span class="o">)(</span>j<span class="o">/</span><span class="mf">999.0f</span><span class="o">))</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L606"><a href="javascript:setLineNum(606)">606</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">8</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L607"><a href="javascript:setLineNum(607)">607</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L608"><a href="javascript:setLineNum(608)">608</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">8</span><span class="o">==</span><span class="mi">7</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L609"><a href="javascript:setLineNum(609)">609</a></th><td>          </td></tr><tr><th id="L610"><a href="javascript:setLineNum(610)">610</a></th><td>        <span class="kt">byte</span><span class="o">[]</span> bytes <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1000</span><span class="o">];</span></td></tr><tr><th id="L611"><a href="javascript:setLineNum(611)">611</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 bytes using nextBytes"</span><span class="o">);</span></td></tr><tr><th id="L612"><a href="javascript:setLineNum(612)">612</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L613"><a href="javascript:setLineNum(613)">613</a></th><td>        r<span class="o">.</span><span class="na">nextBytes</span><span class="o">(</span>bytes<span class="o">);</span></td></tr><tr><th id="L614"><a href="javascript:setLineNum(614)">614</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L615"><a href="javascript:setLineNum(615)">615</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L616"><a href="javascript:setLineNum(616)">616</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>bytes<span class="o">[</span>j<span class="o">]</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L617"><a href="javascript:setLineNum(617)">617</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">16</span><span class="o">==</span><span class="mi">15</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L618"><a href="javascript:setLineNum(618)">618</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L619"><a href="javascript:setLineNum(619)">619</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">16</span><span class="o">==</span><span class="mi">15</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L620"><a href="javascript:setLineNum(620)">620</a></th><td>        </td></tr><tr><th id="L621"><a href="javascript:setLineNum(621)">621</a></th><td>        <span class="kt">byte</span> b<span class="o">;</span></td></tr><tr><th id="L622"><a href="javascript:setLineNum(622)">622</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 bytes -- must be same as nextBytes"</span><span class="o">);</span></td></tr><tr><th id="L623"><a href="javascript:setLineNum(623)">623</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L624"><a href="javascript:setLineNum(624)">624</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L625"><a href="javascript:setLineNum(625)">625</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L626"><a href="javascript:setLineNum(626)">626</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">((</span>b <span class="o">=</span> r<span class="o">.</span><span class="na">nextByte</span><span class="o">())</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L627"><a href="javascript:setLineNum(627)">627</a></th><td>            <span class="k">if</span> <span class="o">(</span>b<span class="o">!=</span>bytes<span class="o">[</span>j<span class="o">])</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"BAD "</span><span class="o">);</span></td></tr><tr><th id="L628"><a href="javascript:setLineNum(628)">628</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">16</span><span class="o">==</span><span class="mi">15</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L629"><a href="javascript:setLineNum(629)">629</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L630"><a href="javascript:setLineNum(630)">630</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">16</span><span class="o">==</span><span class="mi">15</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L631"><a href="javascript:setLineNum(631)">631</a></th><td></td></tr><tr><th id="L632"><a href="javascript:setLineNum(632)">632</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 shorts"</span><span class="o">);</span></td></tr><tr><th id="L633"><a href="javascript:setLineNum(633)">633</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L634"><a href="javascript:setLineNum(634)">634</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L635"><a href="javascript:setLineNum(635)">635</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L636"><a href="javascript:setLineNum(636)">636</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextShort</span><span class="o">()</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L637"><a href="javascript:setLineNum(637)">637</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">8</span><span class="o">==</span><span class="mi">7</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L638"><a href="javascript:setLineNum(638)">638</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L639"><a href="javascript:setLineNum(639)">639</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">8</span><span class="o">==</span><span class="mi">7</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L640"><a href="javascript:setLineNum(640)">640</a></th><td></td></tr><tr><th id="L641"><a href="javascript:setLineNum(641)">641</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 ints"</span><span class="o">);</span></td></tr><tr><th id="L642"><a href="javascript:setLineNum(642)">642</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L643"><a href="javascript:setLineNum(643)">643</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L644"><a href="javascript:setLineNum(644)">644</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L645"><a href="javascript:setLineNum(645)">645</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextInt</span><span class="o">()</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L646"><a href="javascript:setLineNum(646)">646</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">4</span><span class="o">==</span><span class="mi">3</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L647"><a href="javascript:setLineNum(647)">647</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L648"><a href="javascript:setLineNum(648)">648</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">4</span><span class="o">==</span><span class="mi">3</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L649"><a href="javascript:setLineNum(649)">649</a></th><td></td></tr><tr><th id="L650"><a href="javascript:setLineNum(650)">650</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 ints of different sizes"</span><span class="o">);</span></td></tr><tr><th id="L651"><a href="javascript:setLineNum(651)">651</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L652"><a href="javascript:setLineNum(652)">652</a></th><td>        <span class="kt">int</span> max <span class="o">=</span> <span class="mi">1</span><span class="o">;</span></td></tr><tr><th id="L653"><a href="javascript:setLineNum(653)">653</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L654"><a href="javascript:setLineNum(654)">654</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L655"><a href="javascript:setLineNum(655)">655</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextInt</span><span class="o">(</span>max<span class="o">)</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L656"><a href="javascript:setLineNum(656)">656</a></th><td>            max <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span></td></tr><tr><th id="L657"><a href="javascript:setLineNum(657)">657</a></th><td>            <span class="k">if</span> <span class="o">(</span>max <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> max <span class="o">=</span> <span class="mi">1</span><span class="o">;</span></td></tr><tr><th id="L658"><a href="javascript:setLineNum(658)">658</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">4</span><span class="o">==</span><span class="mi">3</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L659"><a href="javascript:setLineNum(659)">659</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L660"><a href="javascript:setLineNum(660)">660</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">4</span><span class="o">==</span><span class="mi">3</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L661"><a href="javascript:setLineNum(661)">661</a></th><td></td></tr><tr><th id="L662"><a href="javascript:setLineNum(662)">662</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 longs"</span><span class="o">);</span></td></tr><tr><th id="L663"><a href="javascript:setLineNum(663)">663</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L664"><a href="javascript:setLineNum(664)">664</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L665"><a href="javascript:setLineNum(665)">665</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L666"><a href="javascript:setLineNum(666)">666</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextLong</span><span class="o">()</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L667"><a href="javascript:setLineNum(667)">667</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">3</span><span class="o">==</span><span class="mi">2</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L668"><a href="javascript:setLineNum(668)">668</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L669"><a href="javascript:setLineNum(669)">669</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">3</span><span class="o">==</span><span class="mi">2</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L670"><a href="javascript:setLineNum(670)">670</a></th><td></td></tr><tr><th id="L671"><a href="javascript:setLineNum(671)">671</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 longs of different sizes"</span><span class="o">);</span></td></tr><tr><th id="L672"><a href="javascript:setLineNum(672)">672</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L673"><a href="javascript:setLineNum(673)">673</a></th><td>        <span class="kt">long</span> max2 <span class="o">=</span> <span class="mi">1</span><span class="o">;</span></td></tr><tr><th id="L674"><a href="javascript:setLineNum(674)">674</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L675"><a href="javascript:setLineNum(675)">675</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L676"><a href="javascript:setLineNum(676)">676</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextLong</span><span class="o">(</span>max2<span class="o">)</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L677"><a href="javascript:setLineNum(677)">677</a></th><td>            max2 <span class="o">*=</span> <span class="mi">2</span><span class="o">;</span></td></tr><tr><th id="L678"><a href="javascript:setLineNum(678)">678</a></th><td>            <span class="k">if</span> <span class="o">(</span>max2 <span class="o">&lt;=</span> <span class="mi">0</span><span class="o">)</span> max2 <span class="o">=</span> <span class="mi">1</span><span class="o">;</span></td></tr><tr><th id="L679"><a href="javascript:setLineNum(679)">679</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">4</span><span class="o">==</span><span class="mi">3</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L680"><a href="javascript:setLineNum(680)">680</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L681"><a href="javascript:setLineNum(681)">681</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">4</span><span class="o">==</span><span class="mi">3</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L682"><a href="javascript:setLineNum(682)">682</a></th><td>          </td></tr><tr><th id="L683"><a href="javascript:setLineNum(683)">683</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 floats"</span><span class="o">);</span></td></tr><tr><th id="L684"><a href="javascript:setLineNum(684)">684</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L685"><a href="javascript:setLineNum(685)">685</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L686"><a href="javascript:setLineNum(686)">686</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L687"><a href="javascript:setLineNum(687)">687</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextFloat</span><span class="o">()</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L688"><a href="javascript:setLineNum(688)">688</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">4</span><span class="o">==</span><span class="mi">3</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L689"><a href="javascript:setLineNum(689)">689</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L690"><a href="javascript:setLineNum(690)">690</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">4</span><span class="o">==</span><span class="mi">3</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L691"><a href="javascript:setLineNum(691)">691</a></th><td></td></tr><tr><th id="L692"><a href="javascript:setLineNum(692)">692</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 doubles"</span><span class="o">);</span></td></tr><tr><th id="L693"><a href="javascript:setLineNum(693)">693</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L694"><a href="javascript:setLineNum(694)">694</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L695"><a href="javascript:setLineNum(695)">695</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L696"><a href="javascript:setLineNum(696)">696</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextDouble</span><span class="o">()</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L697"><a href="javascript:setLineNum(697)">697</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">3</span><span class="o">==</span><span class="mi">2</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L698"><a href="javascript:setLineNum(698)">698</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L699"><a href="javascript:setLineNum(699)">699</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">3</span><span class="o">==</span><span class="mi">2</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L700"><a href="javascript:setLineNum(700)">700</a></th><td></td></tr><tr><th id="L701"><a href="javascript:setLineNum(701)">701</a></th><td>        System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"\nGrab the first 1000 gaussian doubles"</span><span class="o">);</span></td></tr><tr><th id="L702"><a href="javascript:setLineNum(702)">702</a></th><td>        r <span class="o">=</span> <span class="k">new</span> MersenneTwister<span class="o">(</span>SEED<span class="o">);</span></td></tr><tr><th id="L703"><a href="javascript:setLineNum(703)">703</a></th><td>        <span class="k">for</span> <span class="o">(</span>j <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> j <span class="o">&lt;</span> <span class="mi">1000</span><span class="o">;</span> j<span class="o">++)</span></td></tr><tr><th id="L704"><a href="javascript:setLineNum(704)">704</a></th><td>            <span class="o">{</span></td></tr><tr><th id="L705"><a href="javascript:setLineNum(705)">705</a></th><td>            System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span>r<span class="o">.</span><span class="na">nextGaussian</span><span class="o">()</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span></td></tr><tr><th id="L706"><a href="javascript:setLineNum(706)">706</a></th><td>            <span class="k">if</span> <span class="o">(</span>j<span class="o">%</span><span class="mi">3</span><span class="o">==</span><span class="mi">2</span><span class="o">)</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L707"><a href="javascript:setLineNum(707)">707</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L708"><a href="javascript:setLineNum(708)">708</a></th><td>        <span class="k">if</span> <span class="o">(!(</span>j<span class="o">%</span><span class="mi">3</span><span class="o">==</span><span class="mi">2</span><span class="o">))</span> System<span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">();</span></td></tr><tr><th id="L709"><a href="javascript:setLineNum(709)">709</a></th><td>        </td></tr><tr><th id="L710"><a href="javascript:setLineNum(710)">710</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L711"><a href="javascript:setLineNum(711)">711</a></th><td>    </td></tr><tr><th id="L712"><a href="javascript:setLineNum(712)">712</a></th><td>    <span class="o">}</span></td></tr></tbody></table>
      </div>
      <div id="help">
        <strong>Note:</strong> See <a href="/trac/wiki/TracBrowser">TracBrowser</a>
        for help on using the browser.
      </div>
      <div id="anydiff">
        <form action="/trac/diff" method="get">
          <div class="buttons">
            <input type="hidden" name="new_path" value="/randomization/trunk/src/ec/util/MersenneTwister.java" />
            <input type="hidden" name="old_path" value="/randomization/trunk/src/ec/util/MersenneTwister.java" />
            <input type="hidden" name="new_rev" value="8445" />
            <input type="hidden" name="old_rev" value="8445" />
            <input type="submit" value="View changes..." title="Select paths and revs for Diff" />
          </div>
        </form>
      </div>
    </div>
    <div id="altlinks">
      <h3>Download in other formats:</h3>
      <ul>
        <li class="first">
          <a rel="nofollow" href="/trac/browser/randomization/trunk/src/ec/util/MersenneTwister.java?format=txt">Plain Text</a>
        </li><li class="last">
          <a rel="nofollow" href="/trac/export/11521/randomization/trunk/src/ec/util/MersenneTwister.java">Original Format</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/trac/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">
        Powered by <a href="/trac/about"><strong>Trac 0.11</strong></a><br />
        By <a href="http://www.edgewall.org/">Edgewall Software</a>.
      </p>
      <p class="right">Visit the Trac open source project at<br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
  </body>
</html>